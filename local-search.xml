<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>JOOQ 常用操作</title>
    <link href="/2025/10/17/jooq/JOOQ%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/"/>
    <url>/2025/10/17/jooq/JOOQ%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/</url>
    
    <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>JOOQ 常用操作</p><h4 id="SQL"><a href="#SQL" class="headerlink" title="SQL"></a>SQL</h4><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-comment">// 初始化不带连接的上下文操作</span><br><span class="hljs-keyword">val</span> dslContext = DSL.using(<br>    SQLDialect.MYSQL,<br>    Settings()<br>        <span class="hljs-comment">// SQL渲染库名。禁用库名</span><br>        .withRenderSchema(<span class="hljs-literal">false</span>)<br>        <span class="hljs-comment">// SQL渲染表名。当字段不明确，再添加表名</span><br>        .withRenderTable(RenderTable.WHEN_AMBIGUOUS_COLUMNS)<br>)<br>        <br><span class="hljs-comment">// 查询sql</span><br><span class="hljs-keyword">val</span> select = dslContext<br>    .select()<br>    .from(User.USER)<br>    .<span class="hljs-keyword">where</span>()<br>    <span class="hljs-comment">// 可以添加更多查询条件</span><br>    .limit(<span class="hljs-number">0</span>, <span class="hljs-number">10</span>)<br><br><span class="hljs-comment">// 渲染sql</span><br><span class="hljs-keyword">val</span> sql0 = dslContext.render(select)<br><span class="hljs-keyword">val</span> sql1 = dslContext.renderInlined(select)<br><br><br><span class="hljs-comment">// record 映射</span><br><span class="hljs-keyword">val</span> userRecord = dslContext.newRecord(User.USER)<br><span class="hljs-comment">// map to record</span><br>userRecord.from(mapOf(<span class="hljs-string">&quot;id&quot;</span> to <span class="hljs-number">1</span>, <span class="hljs-string">&quot;name&quot;</span> to <span class="hljs-string">&quot;name&quot;</span>))<br><span class="hljs-comment">// record to map</span><br><span class="hljs-keyword">val</span> map = userRecord.intoMap()<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>JOOQ</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JOOQ</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用 Gradle Kotlin DSL 配置 jOOQ 代码生成（Quarkus &amp; Kotlin）</title>
    <link href="/2025/10/16/jooq/Gradle%20Kotlin%20%E9%85%8D%E7%BD%AE%20JOOQ%20%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90/"/>
    <url>/2025/10/16/jooq/Gradle%20Kotlin%20%E9%85%8D%E7%BD%AE%20JOOQ%20%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90/</url>
    
    <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>本文档记录了在一个基于 <strong>Quarkus</strong> 和 <strong>Kotlin</strong> 的项目中使用 <strong>Gradle Kotlin DSL</strong> 配置 **jOOQ 代码生成（Codegen）**的步骤和关键配置项。jOOQ 代码生成能够将数据库 Schema 转换为类型安全的 Kotlin&#x2F;Java 代码，极大地提升开发效率和代码质量。</p><h2 id="1-核心依赖和插件配置"><a href="#1-核心依赖和插件配置" class="headerlink" title="1. 核心依赖和插件配置"></a>1. 核心依赖和插件配置</h2><p>在 <code>build.gradle.kts</code> 文件中，需要引入 jOOQ Gradle 插件、Quarkus 依赖以及 jOOQ Codegen 所需的 JDBC 驱动。</p><h3 id="1-1-插件"><a href="#1-1-插件" class="headerlink" title="1.1 插件"></a>1.1 插件</h3><p>Kotlin</p><figure class="highlight fsharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs fsharp"><span class="hljs-keyword">plugins</span> &#123;<br>    kotlin(<span class="hljs-string">&quot;jvm&quot;</span>) version <span class="hljs-string">&quot;2.2.20&quot;</span><br>    <span class="hljs-built_in">id</span>(<span class="hljs-string">&quot;io.quarkus&quot;</span>)<br><br>    <span class="hljs-comment">// jOOQ Codegen Gradle 插件。gradlePluginPortal() 查不到，可能发布到 mavenCentral()</span><br>    <span class="hljs-built_in">id</span>(<span class="hljs-string">&quot;org.jooq.jooq-codegen-gradle&quot;</span>) version <span class="hljs-string">&quot;3.19.23&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="1-2-依赖配置"><a href="#1-2-依赖配置" class="headerlink" title="1.2 依赖配置"></a>1.2 依赖配置</h3><p><strong>关键点：</strong> jOOQ 代码生成所需的依赖（<code>jooq-codegen</code> 和 JDBC 驱动）需要添加到 <code>jooqCodegen</code> 配置中，而不是常规的 <code>implementation</code>。</p><p>Kotlin</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs scss">dependencies &#123;<br>    <span class="hljs-comment">// ... Quarkus 运行依赖，生成可不添加 ...</span><br>    <span class="hljs-built_in">implementation</span>(&quot;io.quarkus:quarkus-jdbc-mysql&quot;)<br>    <span class="hljs-built_in">implementation</span>(&quot;io.quarkiverse.jooq:quarkus-jooq:<span class="hljs-number">2.1</span>.<span class="hljs-number">0</span>&quot;) <span class="hljs-comment">// Quarkus jOOQ 集成</span><br><br>    <span class="hljs-comment">// ----------------------------------------------------</span><br>    <span class="hljs-comment">// jOOQ 代码生成 (Codegen) 依赖</span><br>    <span class="hljs-comment">// ----------------------------------------------------</span><br>    <span class="hljs-built_in">jooqCodegen</span>(&quot;org.jooq:jooq-codegen:<span class="hljs-number">3.19</span>.<span class="hljs-number">23</span>&quot;)<br>    <span class="hljs-built_in">jooqCodegen</span>(&quot;org.jooq:jooq-meta:<span class="hljs-number">3.19</span>.<span class="hljs-number">23</span>&quot;)<br>    <span class="hljs-comment">// **关键：用于代码生成的 MySQL JDBC 驱动**</span><br>    <span class="hljs-built_in">jooqCodegen</span>(&quot;com.mysql:mysql-connector-j:<span class="hljs-number">8.3</span>.<span class="hljs-number">0</span>&quot;)<br>    <span class="hljs-comment">// ... 其他依赖 ...</span><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="2-jOOQ-代码生成配置-jooq-块"><a href="#2-jOOQ-代码生成配置-jooq-块" class="headerlink" title="2. jOOQ 代码生成配置 (jooq 块)"></a>2. jOOQ 代码生成配置 (<code>jooq</code> 块)</h2><p>使用 <code>jooq</code> 块来定义代码生成器的详细配置。默认情况下，插件会创建一个名为 <code>jooqCodegenMain</code> 的任务。</p><p>Kotlin</p><figure class="highlight fsharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs fsharp"><span class="hljs-keyword">jooq</span> &#123;<br>    <span class="hljs-keyword">configuration</span> &#123;<br>        <span class="hljs-comment">// 2.1. JDBC 连接配置</span><br>        <span class="hljs-keyword">jdbc</span> &#123;<br>            driver <span class="hljs-operator">=</span> <span class="hljs-string">&quot;com.mysql.cj.jdbc.Driver&quot;</span><br>            <span class="hljs-comment">// 注意：完整的连接 URL，包含必要的时区和编码参数</span><br>            url <span class="hljs-operator">=</span> <span class="hljs-string">&quot;jdbc:mysql://localhost:4407/dev-xxx?useUnicode=true&amp;characterEncoding=UTF-8&amp;useJDBCCompliantTimezoneShift=true&amp;useLegacyDatetimeCode=false&amp;serverTimezone=Asia/Shanghai&amp;useSSL=false&amp;allowPublicKeyRetrieval=true&quot;</span><br>            user <span class="hljs-operator">=</span> <span class="hljs-string">&quot;root&quot;</span><br>            password <span class="hljs-operator">=</span> <span class="hljs-string">&quot;123456&quot;</span><br>        &#125;<br><br>        <span class="hljs-comment">// 2.2. 代码生成器配置</span><br>        <span class="hljs-keyword">generator</span> &#123;<br>            <span class="hljs-comment">// **关键：使用 KotlinGenerator 来生成 Kotlin 代码**</span><br>            name <span class="hljs-operator">=</span> <span class="hljs-string">&quot;org.jooq.codegen.KotlinGenerator&quot;</span><br><br>            <span class="hljs-keyword">database</span> &#123;<br>                name <span class="hljs-operator">=</span> <span class="hljs-string">&quot;org.jooq.meta.mysql.MySQLDatabase&quot;</span><br>                <span class="hljs-comment">// 要生成代码的模式 (Schema)。MYSQL 为数据库名称</span><br>                inputSchema <span class="hljs-operator">=</span> <span class="hljs-string">&quot;dev-xxx&quot;</span><br>                includes <span class="hljs-operator">=</span> <span class="hljs-string">&quot;.*&quot;</span><br>                excludes <span class="hljs-operator">=</span> <span class="hljs-string">&quot;flyway_schema_history&quot;</span> <span class="hljs-comment">// 排除特定表</span><br>            &#125;<br><br>            <span class="hljs-comment">// 2.3. 生成内容配置 (Generate)（选配）</span><br>            <span class="hljs-keyword">generate</span> &#123;<br>                <span class="hljs-comment">// 启用生成 Kotlin 数据类作为 POJO</span><br>                isPojos <span class="hljs-operator">=</span> <span class="hljs-literal">true</span><br>                isPojosAsKotlinDataClasses <span class="hljs-operator">=</span> <span class="hljs-literal">true</span> <br><br>                <span class="hljs-comment">// 生成 DAO 类 (Data Access Objects)</span><br>                isDaos <span class="hljs-operator">=</span> <span class="hljs-literal">true</span><br>                isSpringDao <span class="hljs-operator">=</span> <span class="hljs-literal">true</span> <span class="hljs-comment">// 启用 Spring/Quarkus 兼容的 DAO</span><br><br>                <span class="hljs-comment">// 生成 jOOQ Record 类</span><br>                isRecords <span class="hljs-operator">=</span> <span class="hljs-literal">true</span><br><br>                <span class="hljs-comment">// 添加注解，如 @Generated, @NotNull</span><br>                isGeneratedAnnotation <span class="hljs-operator">=</span> <span class="hljs-literal">true</span><br>                isNullableAnnotation <span class="hljs-operator">=</span> <span class="hljs-literal">true</span> <br>            &#125;<br><br>            <span class="hljs-comment">// 2.4. 目标配置 (Target)</span><br>            <span class="hljs-keyword">target</span> &#123;<br>                packageName <span class="hljs-operator">=</span> <span class="hljs-string">&quot;com.example.jooq.generated&quot;</span><br>                directory <span class="hljs-operator">=</span> <span class="hljs-string">&quot;build/generated-src/jooq/main&quot;</span> <span class="hljs-comment">// 代码输出目录</span><br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="3-源码集和任务依赖配置"><a href="#3-源码集和任务依赖配置" class="headerlink" title="3. 源码集和任务依赖配置"></a>3. 源码集和任务依赖配置</h2><p>生成的代码必须被 Gradle 识别并加入到编译路径中。同时，要确保代码生成任务在编译之前运行。</p><h3 id="3-1-添加源码目录"><a href="#3-1-添加源码目录" class="headerlink" title="3.1 添加源码目录"></a>3.1 添加源码目录</h3><p>将 jOOQ 生成的目录添加到 <code>main</code> 源码集的 Kotlin 路径。</p><p>Kotlin</p><figure class="highlight fsharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs fsharp"><span class="hljs-keyword">sourceSets</span> &#123;<br>    <span class="hljs-keyword">main</span> &#123;<br>        <span class="hljs-keyword">kotlin</span> &#123;<br>            <span class="hljs-comment">// 将生成的代码输出目录添加到 Source Set</span><br>            srcDir(<span class="hljs-string">&quot;build/generated-src/jooq/main&quot;</span>)<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="3-2-任务依赖"><a href="#3-2-任务依赖" class="headerlink" title="3.2 任务依赖"></a>3.2 任务依赖</h3><p>确保在 Kotlin 编译 (<code>KotlinCompile</code>) 和 Quarkus 构建 (<code>quarkusBuild</code>) 之前，强制运行 jOOQ 代码生成任务（默认任务名为 <code>jooqCodegen</code> 或 <code>jooqCodegenMain</code>）。</p><p>Kotlin</p><figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs isbl"><span class="hljs-variable"><span class="hljs-class">tasks</span>.withType</span>&lt;<span class="hljs-variable">KotlinCompile</span>&gt;().configureEach &#123;<br>    <span class="hljs-comment">// 确保编译前 jOOQ 代码已生成</span><br>    <span class="hljs-function"><span class="hljs-title">dependsOn</span>(<span class="hljs-variable"><span class="hljs-class">tasks</span>.named</span>(<span class="hljs-string">&quot;jooqCodegen&quot;</span>))</span><br>&#125;<br><br><span class="hljs-variable"><span class="hljs-class">tasks</span>.named</span>(<span class="hljs-string">&quot;quarkusBuild&quot;</span>) &#123;<br>    <span class="hljs-comment">// 确保构建前 jOOQ 代码已生成</span><br>    <span class="hljs-function"><span class="hljs-title">dependsOn</span>(<span class="hljs-variable"><span class="hljs-class">tasks</span>.named</span>(<span class="hljs-string">&quot;jooqCodegen&quot;</span>))</span><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="4-运行代码生成"><a href="#4-运行代码生成" class="headerlink" title="4. 运行代码生成"></a>4. 运行代码生成</h2><p>配置完成后，您可以通过运行 Gradle 任务来执行代码生成：</p><p>Bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">./gradlew jooqCodegen<br><span class="hljs-comment"># 或</span><br>./gradlew jooqCodegenMain<br></code></pre></td></tr></table></figure><p>执行成功后，生成的 Kotlin 代码（包括 Records, POJOs, DAOs, Tables 等）将位于 <code>build/generated-src/jooq/main</code> 目录下。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.jooq.org/doc/latest/manual/code-generation/codegen-execution/codegen-gradle/">JOOQ - Running the code generator with Gradle</a></p>]]></content>
    
    
    <categories>
      
      <category>JOOQ</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Gradle</tag>
      
      <tag>Kotlin</tag>
      
      <tag>Quarkus</tag>
      
      <tag>JOOQ</tag>
      
      <tag>代码生成</tag>
      
      <tag>codegen</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Docker 安装 Redis</title>
    <link href="/2019/10/03/docker/Docker-%E5%AE%89%E8%A3%85-Redis/"/>
    <url>/2019/10/03/docker/Docker-%E5%AE%89%E8%A3%85-Redis/</url>
    
    <content type="html"><![CDATA[<p>Docker 安装 Redis 教程</p><span id="more"></span><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><p>Centos 7 ，SELinux 启动</p><p>Docker 19.03.1</p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>启动容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker run \<br>-p 6379:6379 \<br>--name redis \<br>-d redis \<br>redis-server<br></code></pre></td></tr></table></figure><p>自定义路径，保存数据和配置文件，<a href="/static/iamge/Docker-%E5%AE%89%E8%A3%85-Redis/redis.conf">redis.conf</a> 请提前复制到 <code>/program/redis/conf</code>（注意：<code>$PWD</code>表示当前目录）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker run \<br>-p 6379:6379 \<br>-v /program/redis/data:/data:Z \<br>-v /program/redis/conf:/usr/local/etc/redis:Z \<br>--name redis \<br>-d redis \<br>redis-server /usr/local/etc/redis/redis.conf<br></code></pre></td></tr></table></figure><p>防火墙</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">firewall-cmd --zone=public --add-port=6379/tcp --permanent<br>firewall-cmd --reload<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Redis</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Docker</tag>
      
      <tag>Redis</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Docker 安装 Nacos</title>
    <link href="/2019/09/18/docker/Docker-%E5%AE%89%E8%A3%85-Nacos/"/>
    <url>/2019/09/18/docker/Docker-%E5%AE%89%E8%A3%85-Nacos/</url>
    
    <content type="html"><![CDATA[<p><a href="https://nacos.io/zh-cn/">Nacos</a> 是阿里的一个开源中间件，用于服务的注册以及发现，配置和服务管理。</p><span id="more"></span><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><p>CentOS release 7.4.1708</p><p>Docker 19.03.1</p><p>Docker Compose 1.24.1</p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><ol><li><p>安装<code>Git</code></p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">yum <span class="hljs-keyword">install</span> git -y<br></code></pre></td></tr></table></figure></li><li><p>安装 <code>Docker</code>，<a href="https://docs.docker.com/install/linux/docker-ce/centos/">官网</a>，<a href="https://holylcd.gitee.io/2019/01/30/5fd50d278d504636b6d32603d5018429.html">个人教程</a></p></li><li><p>克隆项目</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> --depth 1 https://github.com/nacos-group/nacos-docker.git<br></code></pre></td></tr></table></figure></li><li><p>Standalone Derby</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker-compose -f example/standalone-derby.yaml up<br></code></pre></td></tr></table></figure></li><li><p>Standalone Mysql</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker-compose -f example/standalone-mysql.yaml up<br></code></pre></td></tr></table></figure></li><li><p>Cluster</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker-compose -f example/cluster-hostname.yaml up <br></code></pre></td></tr></table></figure></li><li><p>查询服务状态</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker ps -a<br></code></pre></td></tr></table></figure></li></ol><h1 id="防火墙"><a href="#防火墙" class="headerlink" title="防火墙"></a>防火墙</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">firewall-cmd --zone=public --add-port=8848/tcp --permanent<br></code></pre></td></tr></table></figure><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://hub.docker.com/r/nacos/nacos-server">Nacos</a></p>]]></content>
    
    
    <categories>
      
      <category>Nacos</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Spring Cloud Alibaba</tag>
      
      <tag>Nacos</tag>
      
      <tag>Spring Cloud</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>修改SSH端口 禁用root登录</title>
    <link href="/2019/09/17/%E4%BF%AE%E6%94%B9SSH%E7%AB%AF%E5%8F%A3-%E7%A6%81%E7%94%A8root%E7%99%BB%E5%BD%95/"/>
    <url>/2019/09/17/%E4%BF%AE%E6%94%B9SSH%E7%AB%AF%E5%8F%A3-%E7%A6%81%E7%94%A8root%E7%99%BB%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<p>Linux 新机修改 SSH 端口，禁用 root 登录</p><span id="more"></span><h1 id="启用-SELinux"><a href="#启用-SELinux" class="headerlink" title="启用 SELinux"></a>启用 SELinux</h1><p>检查状态</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sestatus<br></code></pre></td></tr></table></figure><p>安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum install selinux-policy-targeted<br></code></pre></td></tr></table></figure><p>开启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /etc/selinux/config<br>或<br>setenforce 1<br></code></pre></td></tr></table></figure><p>设置SELinux下次重启仍然保持开启，【重要】否则无法正常启动系统</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">touch</span> /.autorelabel<br></code></pre></td></tr></table></figure><p>重启</p><h1 id="修改SSH端口"><a href="#修改SSH端口" class="headerlink" title="修改SSH端口"></a>修改SSH端口</h1><p>修改 sshd 配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /etc/ssh/sshd_config<br></code></pre></td></tr></table></figure><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs vhdl"><span class="hljs-keyword">Port</span> <span class="hljs-number">22</span> //旧 <span class="hljs-keyword">Port</span>，先保留，防止翻车导致无法远程登录<br><span class="hljs-keyword">Port</span> <span class="hljs-number">2222</span> //新 <span class="hljs-keyword">Port</span><br></code></pre></td></tr></table></figure><p>开放端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 启动防火墙</span><br>systemctl start firewalld<br><span class="hljs-comment"># 添加开放端口</span><br>firewall-cmd --zone=public --add-port=2222/tcp --permanent<br><span class="hljs-comment"># 重载端口配置</span><br>firewall-cmd --reload<br></code></pre></td></tr></table></figure><p>查看 SSH 端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">semanage port -l | grep ssh<br></code></pre></td></tr></table></figure><p>添加 SSH 端口，之后可以再次查看端口，确认是否添加成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">semanage port -a -t ssh_port_t -p tcp 2222<br></code></pre></td></tr></table></figure><p>如果出现 semanage command not found，请执行 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum provides /usr/sbin/semanage<br>或者<br>yum whatprovides /usr/sbin/semanage<br>yum -y install policycoreutils-python<br></code></pre></td></tr></table></figure><p>重启服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl restart sshd<br></code></pre></td></tr></table></figure><p>旧的远程连接不会离线，可以先保留窗口，新开窗口测试 SSH 端口是否正常</p><p>服务正常之后，回头注释 <code>/etc/ssh/sshd_config</code> 的 22 Port</p><h1 id="禁用-root-远程登录"><a href="#禁用-root-远程登录" class="headerlink" title="禁用 root 远程登录"></a>禁用 root 远程登录</h1><p>修改配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /etc/ssh/sshd_config<br></code></pre></td></tr></table></figure><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gams">#PermitRootLogin <span class="hljs-keyword">yes</span>  #去掉注释，<span class="hljs-keyword">yes</span>-允许登录，<span class="hljs-keyword">no</span>-不允许登录<br></code></pre></td></tr></table></figure><p>重启服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl restart sshd<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>CentOS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CentOS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Spring Cache Redis实现 (Spring Boot + Redis)</title>
    <link href="/2019/09/12/Spring-Cache-Redis%E5%AE%9E%E7%8E%B0-Spring-Boot-Redis/"/>
    <url>/2019/09/12/Spring-Cache-Redis%E5%AE%9E%E7%8E%B0-Spring-Boot-Redis/</url>
    
    <content type="html"><![CDATA[<p>基于Spring Data Redis、Spring Cache实现后端缓存，提高并发。可实现 <code>@Cacheable</code>有效期、固定时间过期。</p><span id="more"></span><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><p>Spring Boot 2.1.7.RELEASE</p><h1 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h1><ol><li><p>已经开启 Spring Cache</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@EnableCaching</span><br></code></pre></td></tr></table></figure></li></ol><h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><ol><li>自定义 redis 缓存管理</li><li><code>@Cacheable</code> 指定缓存管理</li></ol><h1 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h1><ol><li><p>自定义 redis 缓存管理</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Bean(&quot;customCacheManager&quot;)</span><br>   <span class="hljs-keyword">public</span> CacheManager <span class="hljs-title function_">commonCacheManager</span><span class="hljs-params">(RedisConnectionFactory redisConnectionFactory)</span> &#123;<br>       <span class="hljs-comment">// 设置缓存有效期5分钟</span><br>       <span class="hljs-type">RedisCacheConfiguration</span> <span class="hljs-variable">redisCacheConfiguration</span> <span class="hljs-operator">=</span> RedisCacheConfiguration<br>               .defaultCacheConfig()<br>               .entryTtl(Duration.ofMinutes(<span class="hljs-number">5L</span>));<br>       <span class="hljs-keyword">return</span> RedisCacheManager<br>               .builder(RedisCacheWriter.nonLockingRedisCacheWriter(redisConnectionFactory))<br>               .cacheDefaults(redisCacheConfiguration).build();<br>   &#125;<br></code></pre></td></tr></table></figure></li><li><p><code>@Cacheable</code> 指定缓存管理</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Cacheable(</span><br><span class="hljs-meta">    value = &quot;redis:key:xxx&quot;,</span><br><span class="hljs-meta">    cacheManager = &quot;customCacheManager&quot;</span><br><span class="hljs-meta">)</span><br><span class="hljs-meta">@RequestMapping(value = &quot;index&quot;, method = RequestMethod.GET)</span><br><span class="hljs-keyword">public</span> ResponseEntity&lt;IndexVO&gt; <span class="hljs-title function_">index</span><span class="hljs-params">()</span> &#123;<br>    ...<br></code></pre></td></tr></table></figure></li><li><p>@CacheEvict 主动清理缓存</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@CacheEvict(</span><br><span class="hljs-meta">    value = &quot;redis:key:xxx&quot;,</span><br><span class="hljs-meta">    cacheManager = &quot;customCacheManager&quot;</span><br><span class="hljs-meta">)</span><br><span class="hljs-meta">@RequestMapping(value = &quot;index/clear&quot;, method = RequestMethod.GET)</span><br><span class="hljs-keyword">public</span> ResponseEntity <span class="hljs-title function_">clearIndex</span><span class="hljs-params">()</span> &#123;<br>    ...<br></code></pre></td></tr></table></figure></li></ol><h1 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h1><p><a href="https://gitee.com/holylcd/spring-boot-quick">案例</a>还有其他集成，本章读者可以直接阅读一下代码（跪求 Star……）</p><ol><li><p>缓存管理</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">org.holy.spring.boot.quick.config.redis.RedisConfig#commonCacheManager<br></code></pre></td></tr></table></figure></li><li><p>@Cacheable注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">org.holy.spring.boot.quick.controller.v1.IndexController#banner<br></code></pre></td></tr></table></figure></li><li><p>@CacheEvict注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">org.holy.spring.boot.quick.controller.v1.IndexController#clearBanner<br></code></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <categories>
      
      <category>Spring Boot Redis</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Redis</tag>
      
      <tag>Spring Cache</tag>
      
      <tag>Spring Boot Redis</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>接口文档管理系统-小幺鸡</title>
    <link href="/2019/09/12/%E6%8E%A5%E5%8F%A3%E6%96%87%E6%A1%A3%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F-%E5%B0%8F%E5%B9%BA%E9%B8%A1/"/>
    <url>/2019/09/12/%E6%8E%A5%E5%8F%A3%E6%96%87%E6%A1%A3%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F-%E5%B0%8F%E5%B9%BA%E9%B8%A1/</url>
    
    <content type="html"><![CDATA[<p>小幺鸡在线文档管理，支持在线测试，支持json,txt,xml,html,js,流,和 WebSocket</p><p>前后端分离开发环境下，前端开发人员和后端开发人员主要通过接口文档对接，规范的、好用的接口文档管理系统能够大大提高开发人员效率。本章主要介绍《小幺鸡在线文档管理》，支持在线测试，支持json,txt,xml,html,js,流,和 WebSocket。个人觉得这是一款非常棒的接口管理系统。系统开发者还提供了，读者可以看下效果哦<a href="http://www.xiaoyaoji.cn/doc/1n6N0lgsSmW">演示系统</a></p><span id="more"></span><h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><ol><li>可设置不同环境，方便切换开发、测试环境</li><li>可设置全局请求头、响应头、请求体、响应体，满足多种场景</li><li>可在线测试</li></ol><h1 id="搭建"><a href="#搭建" class="headerlink" title="搭建"></a>搭建</h1><p><strong>环境</strong></p><p>Linux</p><p>Tomcat</p><p><strong>搭建</strong></p><p>下载源码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://gitee.com/zhoujingjie/apiManager.git<br></code></pre></td></tr></table></figure><p>创建数据库，数据库脚本位于项目 <code>./doc/xiaoyaoji.sql</code>，自行建库即可</p><p>打包，项目跟目录执行maven指令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">mvn package<br></code></pre></td></tr></table></figure><p>复制 <code>xiaoyaoji-web/target/xiaoyaoji-2.1.7.war</code>至tomcat服务器<code>webapps</code>目录，改名 <code>ROOT.war</code></p><p>解压 <code>ROOT.war</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">tar -zxvf ./ROOT.war<br></code></pre></td></tr></table></figure><p>修改数据库配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim ./ROOT/WEB-INF/classes/platform.properties<br></code></pre></td></tr></table></figure><p>填写正确的数据库地址、名称、登录账号、密码即可，其他配置可后期自行了解</p><p>启动 Tomcat，为简单说明问题，这里直接启动 Tomcat，对外线上服务请不要这样启动项目</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sh ./bin/startup.sh<br></code></pre></td></tr></table></figure><p>大功告成！</p><p><strong>Google chrome 插件</strong></p><ol><li><p>可翻墙的同学，直接到应用商店安装即可 <code>小幺鸡</code></p></li><li><p>不能翻墙的同学，这里提供一种目前（2019&#x2F;09&#x2F;12）可行的办法</p><p>开发者提供的插件源码位于项目 <code>./浏览器插件/</code></p><p>打开 chrome-拓展程序，右上角开启开发者模式</p><p>加载已解压的拓展程序，选择文件夹 <code>./浏览器插件</code>，现在可以看到插件已经成功加载至 chrome！</p></li></ol><p><strong>使用</strong></p><ol><li>全部访客都可以注册账号</li><li>那个账号创建的项目，创建人即管理员，可以将其他用户拉到项目里</li></ol>]]></content>
    
    
    <categories>
      
      <category>接口文档管理</category>
      
    </categories>
    
    
    <tags>
      
      <tag>接口文档</tag>
      
      <tag>API管理</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Spring Boot 部署</title>
    <link href="/2019/09/11/Spring-Boot-%E9%83%A8%E7%BD%B2-Linux-%E6%9C%8D%E5%8A%A1%E5%8C%96/"/>
    <url>/2019/09/11/Spring-Boot-%E9%83%A8%E7%BD%B2-Linux-%E6%9C%8D%E5%8A%A1%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<p>简单介绍三种Spring Boot应用的部署方式，分别是：nohub、Linux 服务化、Docker，nohub方式和Linux服务化建议用于单体应用，分布式应用建议使用 Docker。教程建立在Spring Boot已经完成打包并且可用情况下。</p><span id="more"></span><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><p>CentOS 7，SELinux开启</p><p>Spring Boot应用程序（路径为<code>/program/app.jar</code>）</p><h1 id="nohub启动"><a href="#nohub启动" class="headerlink" title="nohub启动"></a>nohub启动</h1><p>直接启动，这种方式其实就是 <code>java -jar</code>，只是通过 nohub 使程序能够以守护进程继续运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">nohup</span> java -jar /program/app.jar &amp;<br></code></pre></td></tr></table></figure><p>查询程序进程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ps aux|grep report-0.0.1-SNAPSHOT.jar<br></code></pre></td></tr></table></figure><p>停止程序进程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">kill</span> -9 xxxx上面查询到的pid<br></code></pre></td></tr></table></figure><h1 id="Linux-服务化"><a href="#Linux-服务化" class="headerlink" title="Linux 服务化"></a>Linux 服务化</h1><p>为 Spring Boot 应用建立一个简单的 Linux 服务</p><p>新增服务文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /etc/systemd/system/myapp.service<br></code></pre></td></tr></table></figure><p>编辑内容</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[Unit]</span><br><span class="hljs-comment">#服务描述</span><br><span class="hljs-attr">Description</span>=My Spring Boot Application<br><span class="hljs-attr">After</span>=network.target<br><br><span class="hljs-section">[Service]</span><br><span class="hljs-attr">Type</span>=forking<br><span class="hljs-attr">TimeoutStartSec</span>=<span class="hljs-number">0</span><br><span class="hljs-comment">#这里改为机器的JVM路径</span><br><span class="hljs-attr">ExecStart</span>=/opt/jdk1.<span class="hljs-number">8.0</span>_191/bin/java -jar /program/app.jar<br><span class="hljs-attr">ExecStop</span>=/opt/jdk1.<span class="hljs-number">8.0</span>_191/bin/java -jar /program/app.jar<br><span class="hljs-comment">#这里可以使用非root用户，记得给用到的路径授权哦</span><br><span class="hljs-comment">#User=root</span><br><span class="hljs-comment">#Group=root</span><br><br><span class="hljs-section">[Install]</span><br><span class="hljs-comment">#多用户</span><br><span class="hljs-attr">WantedBy</span>=multi-user.target<br></code></pre></td></tr></table></figure><p>启动服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl start myapp<br></code></pre></td></tr></table></figure><p>停止服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl stop myapp<br></code></pre></td></tr></table></figure><p>重启服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl restart myapp<br></code></pre></td></tr></table></figure><p>自启服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl <span class="hljs-built_in">enable</span> myapp<br></code></pre></td></tr></table></figure><p>关闭自启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl <span class="hljs-built_in">disable</span> myapp<br></code></pre></td></tr></table></figure><h1 id="Docker-部署"><a href="#Docker-部署" class="headerlink" title="Docker 部署"></a>Docker 部署</h1><ol><li><p><a href="https://holylcd.gitee.io/2019/01/30/5fd50d278d504636b6d32603d5018429.html">Docker 安装</a></p></li><li><p>准备镜像</p><p>新建 Dockerfile</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /program/Dockerfile<br></code></pre></td></tr></table></figure><p>边界 Dockerfile</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-keyword">FROM</span> openjdk:<span class="hljs-number">8</span>-jre-alpine<br><span class="hljs-keyword">VOLUME</span><span class="language-bash"> [<span class="hljs-string">&quot;/tmp&quot;</span>]</span><br><span class="hljs-keyword">ENTRYPOINT</span><span class="language-bash"> [<span class="hljs-string">&quot;java&quot;</span>,<span class="hljs-string">&quot;-Djava.security.egd=file:/dev/./urandom&quot;</span>,<span class="hljs-string">&quot;-jar&quot;</span>]</span><br><span class="hljs-keyword">CMD</span><span class="language-bash"> [<span class="hljs-string">&quot;/program/app.jar&quot;</span>]</span><br></code></pre></td></tr></table></figure><p>构建镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker build -f ./Dockerfile -t myapp .<br></code></pre></td></tr></table></figure></li><li><p>启动 Spring Boot 服务</p><p>为了简单说明 Docker 部署，这里先使用 host 网络模式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker run -d \<br>--net=host \<br>--restart=unless-stopped \<br>--name myapp \<br>-v /etc/localtime:/etc/localtime \<br>-v /program/app.jar:/program/app.jar:ro \<br>myapp<br></code></pre></td></tr></table></figure><p>net：网络模式</p><p>restart：重启策略。unless-stopped，服务异常时总是重启，除非主动停止</p><p>name：容器名</p><p>第一个-v：同步物理机的时间至容器</p><p>第二个-v：映射物理机文件<code>/program/app.jar</code>至容器<code>/program/app.jar</code></p></li></ol>]]></content>
    
    
    <categories>
      
      <category>Spring Boot</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Docker</tag>
      
      <tag>Spring Boot</tag>
      
      <tag>微服务</tag>
      
      <tag>nohub</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>自选组件搭建邮件服务器 CentOS</title>
    <link href="/2019/03/28/%E8%87%AA%E9%80%89%E7%BB%84%E4%BB%B6%E6%90%AD%E5%BB%BA%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8-CentOS/"/>
    <url>/2019/03/28/%E8%87%AA%E9%80%89%E7%BB%84%E4%BB%B6%E6%90%AD%E5%BB%BA%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8-CentOS/</url>
    
    <content type="html"><![CDATA[<p>自选组件搭建邮件服务器 CentOS</p><span id="more"></span><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><p>CentOS 7</p><h1 id="组件"><a href="#组件" class="headerlink" title="组件"></a>组件</h1><p>Postfix</p><p>Dovecot</p><p>MySQL 5.7</p><p>OpenDKIM</p><p>Nginx</p><p>PHP</p><p>Roundcube WebMail</p><p>Policyd</p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h2><p>从<a href="https://dev.mysql.com/downloads/mysql/">mysql</a>下载离线包</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">wget https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-5.7.25-1.el7.x86_64.rpm-bundle.tar<br></code></pre></td></tr></table></figure><p>解压包</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">tar -zxvf mysql-5.7.xx.rpm-bundle.tar<br></code></pre></td></tr></table></figure><p>包的作用</p><blockquote><p>mysql-community-client（*客户端程序和工具）<br>mysql-community-server（*服务器程序和工具）<br>mysql-community-libs（*LIB库）<br>mysql-community-libs-compat（*LIB共享兼容库）<br>mysql-community-common（*公共文件）<br>mysql-community-devel（开发MySQL必备的头文件和库）<br>mysql-community-embedded（嵌入式库）<br>mysql-community-embedded-compat（嵌入式共享兼容库）<br>mysql-community-embedded-dev（嵌入式开发库）<br>mysql-community-test（测试套件）</p></blockquote><p>安装需要的包</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">yum install mysql-community-&#123;server,client,common,libs&#125;-*<br></code></pre></td></tr></table></figure><p>安装生成文件</p><p><img src="/./be066140513011e98a97e9942f6fcdb5/mysql.jpg"></p><p>启动</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">systemctl start mysqld<br></code></pre></td></tr></table></figure><p>设置root密码</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">cat</span> /var/log/mysqld.log<br></code></pre></td></tr></table></figure><p>SET PASSWORD FOR ‘root‘@’localhost’ &#x3D; PASSWORD(‘123’);</p><p>SHOW VARIABLES LIKE ‘validate_password%’;</p><p>validate_password_dictionary_file<br>插件用于验证密码强度的字典文件路径。</p><p>validate_password_length<br>密码最小长度，参数默认为8，它有最小值的限制，最小值为：validate_password_number_count + validate_password_special_char_count + (2 * validate_password_mixed_case_count)</p><p>validate_password_mixed_case_count<br>密码至少要包含的小写字母个数和大写字母个数。</p><p>validate_password_number_count<br>密码至少要包含的数字个数。</p><p>validate_password_policy<br>密码强度检查等级，0&#x2F;LOW、1&#x2F;MEDIUM、2&#x2F;STRONG。有以下取值：<br>Policy                 Tests Performed<br>0 or LOW               Length<br>1 or MEDIUM         Length; numeric, lowercase&#x2F;uppercase, and special characters<br>2 or STRONG        Length; numeric, lowercase&#x2F;uppercase, and special characters; dictionary file<br>默认是1，即MEDIUM，所以刚开始设置的密码必须符合长度，且必须含有数字，小写或大写字母，特殊字符。</p><p>validate_password_special_char_count</p><p>密码至少要包含的特殊字符数。</p><p>set global validate_password_policy&#x3D;0;</p><p>set global validate_password_mixed_case_count&#x3D;0;</p><p>set global validate_password_number_count&#x3D;3;</p><p>set global validate_password_special_char_count&#x3D;0;</p><p>set global validate_password_length&#x3D;3;</p><h2 id="创建虚拟数据"><a href="#创建虚拟数据" class="headerlink" title="创建虚拟数据"></a>创建虚拟数据</h2><p>创建用户</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">CREATE USER &#x27;mail_sys&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;mail_sys&#x27;;<br></code></pre></td></tr></table></figure><p>创建数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">CREATE DATABASE mail_sys;<br></code></pre></td></tr></table></figure><p>授权</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">GRANT SELECT ON mail_sys.* TO &#x27;mail_sys&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;mail_sys&#x27;;<br></code></pre></td></tr></table></figure><p>刷新权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">FLUSH PRIVILEGES;<br></code></pre></td></tr></table></figure><p>切换数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">USE mail_sys;<br></code></pre></td></tr></table></figure><p>域名表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">CREATE TABLE `domains` ( `id` int(20) NOT NULL auto_increment, `name` varchar(100) NOT NULL, PRIMARY KEY (`id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;<br></code></pre></td></tr></table></figure><p>用户表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">CREATE TABLE `users` ( `id` int(20) NOT NULL auto_increment, `domain_id` int(20) NOT NULL, `password` varchar(200) NOT NULL, `email` varchar(200) NOT NULL, PRIMARY KEY (`id`), UNIQUE KEY `email` (`email`), FOREIGN KEY (domain_id) REFERENCES domains(id) ON DELETE CASCADE ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;<br></code></pre></td></tr></table></figure><p>别名表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">CREATE TABLE `aliases` ( `id` int(20) NOT NULL auto_increment, `domain_id` int(20) NOT NULL, `source` varchar(200) NOT NULL, `destination` varchar(200) NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (domain_id) REFERENCES domains(id) ON DELETE CASCADE ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;<br></code></pre></td></tr></table></figure><p>添加域名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mysql">INSERT INTO `mail_sys`.`domains` (`id` ,`name`) <br>VALUES (1, &#x27;example.com&#x27;);<br></code></pre></td></tr></table></figure><p>添加用户</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs mysql">INSERT INTO `mail_sys`.`users`<br>    (`id`, `domain_id`, `password` , `email`) VALUES<br>    (&#x27;1&#x27;, &#x27;1&#x27;, ENCRYPT(&#x27;123qwe&#x27;, CONCAT(&#x27;$6$&#x27;, SUBSTRING(SHA(RAND()), -16))), &#x27;admin@example.com&#x27;),<br>    (&#x27;2&#x27;, &#x27;1&#x27;, ENCRYPT(&#x27;123qwe&#x27;, CONCAT(&#x27;$6$&#x27;, SUBSTRING(SHA(RAND()), -16))), &#x27;user1@example.com&#x27;),<br>    (&#x27;3&#x27;, &#x27;1&#x27;, ENCRYPT(&#x27;123qwe&#x27;, CONCAT(&#x27;$6$&#x27;, SUBSTRING(SHA(RAND()), -16))), &#x27;user2@example.com&#x27;);<br></code></pre></td></tr></table></figure><p>添加别名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs mysql">INSERT INTO `mail_sys`.`aliases`<br>    (`id`, `domain_id`, `source`, `destination`) VALUES<br>    (&#x27;1&#x27;, &#x27;1&#x27;, &#x27;admin1@example.com&#x27;, &#x27;admin@example.com&#x27;),<br>    (&#x27;2&#x27;, &#x27;1&#x27;, &#x27;user11@example.com&#x27;, &#x27;user1@example.com&#x27;),<br>    (&#x27;3&#x27;, &#x27;1&#x27;, &#x27;user22@example.com&#x27;, &#x27;user2@example.com&#x27;);<br></code></pre></td></tr></table></figure><p>检查数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">SELECT * FROM mail_sys.domains;<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">SELECT * FROM mail_sys.users;<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">SELECT * FROM mail_sys.aliases;<br></code></pre></td></tr></table></figure><h2 id="邮件系统专用用户"><a href="#邮件系统专用用户" class="headerlink" title="邮件系统专用用户"></a>邮件系统专用用户</h2><ol><li>所有的邮件用户都映射到系统的同一个真实的用户上。</li><li>不建议直接使用系统自带的 mail 账户。</li></ol><p>创建专用组</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">groupadd -g 2000 mail_sys<br></code></pre></td></tr></table></figure><p>创建专用用户</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">useradd -g mail_sys -u 2000 mail_sys -d /var/spool/mail -s /sbin/nologin<br></code></pre></td></tr></table></figure><p>修改邮件目录所有者</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">chown</span> -R mail_sys:mail_sys /var/spool/mail<br></code></pre></td></tr></table></figure><h2 id="生成数字签名"><a href="#生成数字签名" class="headerlink" title="生成数字签名"></a>生成数字签名</h2><p>私钥</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">openssl genrsa -des3 -out privkey.pem 2048<br><br></code></pre></td></tr></table></figure><p>自签证书</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">openssl req -new -x509 -key privkey.pem -out cacert.pem -days 1095<br><br></code></pre></td></tr></table></figure><h2 id="Postfix"><a href="#Postfix" class="headerlink" title="Postfix"></a>Postfix</h2><h3 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">yum install postfix<br><br></code></pre></td></tr></table></figure><h3 id="备份原版配置文件"><a href="#备份原版配置文件" class="headerlink" title="备份原版配置文件"></a>备份原版配置文件</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">cp</span> -r /etc/postfix /etc/postfix.bak<br><br></code></pre></td></tr></table></figure><h3 id="修改-main-cf"><a href="#修改-main-cf" class="headerlink" title="修改 main.cf"></a>修改 main.cf</h3><p> 该文件配置 Postfix 的全局参数。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">cat</span> &gt; /etc/postfix/main.cf &lt;&lt; <span class="hljs-string">EOF</span><br><span class="hljs-string"></span><br></code></pre></td></tr></table></figure><p>请按实际情况以及注释提示<strong>修改以下内容</strong>，完成去除 # 号和后面的注释，然后粘贴到命令行窗口中按回车即可。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs sh">myhostname = example.com<span class="hljs-comment">#本机域名，需要修改</span><br>alias_maps = <span class="hljs-built_in">hash</span>:/etc/aliases<br>alias_database = <span class="hljs-built_in">hash</span>:/etc/aliases<br>myorigin = /etc/mailname<br>mydestination = localhost<br>relayhost =<br>mynetworks = 127.0.0.0/8<br>mailbox_size_limit = 0<br>recipient_delimiter = +<br>inet_interfaces = all<br>smtpd_banner = <span class="hljs-variable">$myhostname</span> ESMTP <span class="hljs-variable">$mail_name</span><br>biff = no<br>append_dot_mydomain = no<br>readme_directory = no<br>smtpd_tls_cert_file=/etc/pki/tls/certs/cert.pem<span class="hljs-comment"># example.com 证书文件位置，需要修改</span><br>smtpd_tls_key_file=/etc/pki/tls/certs/key.pem<span class="hljs-comment"># example.com 证书私钥文件位置，需要修改</span><br>smtpd_use_tls=<span class="hljs-built_in">yes</span><br>smtpd_tls_auth_only = no<br>smtpd_tls_security_level = may<br>smtp_tls_security_level = may<br>virtual_transport = lmtp:unix:private/dovecot-lmtp<br>smtpd_sasl_type = dovecot<br>smtpd_sasl_path = private/auth<br>smtpd_sasl_auth_enable = <span class="hljs-built_in">yes</span><br>virtual_mailbox_domains = mysql:/etc/postfix/mysql_mailbox_domains.cf<br>virtual_mailbox_maps = mysql:/etc/postfix/mysql_mailbox_maps.cf<br>virtual_alias_maps = mysql:/etc/postfix/mysql_alias_maps.cf, mysql:/etc/postfix/mysql_email2email.cf<br>smtpd_recipient_restrictions = permit_sasl_authenticated, permit_mynetworks, reject_unauth_destination<br>virtual_uid_maps = static:2000<br>virtual_gid_maps = static:2000<br>message_size_limit = 102400000<br>EOF<br><br></code></pre></td></tr></table></figure><h3 id="修改-master-cf"><a href="#修改-master-cf" class="headerlink" title="修改 master.cf"></a>修改 master.cf</h3><p>该文件配置 Postfix 中各模块的参数。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">cat</span> &gt; /etc/postfix/master.cf &lt;&lt; <span class="hljs-string">EOF</span><br><span class="hljs-string"></span><br></code></pre></td></tr></table></figure><p>以下内容直接粘贴到命令行窗口中按回车即可。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs sh">smtp      inet  n       -       n       -       -       smtpd<br>submission inet n       -       n       -       -       smtpd<br>  -o syslog_name=postfix/submission<br>  -o smtpd_tls_security_level=encrypt<br>  -o smtpd_sasl_auth_enable=<span class="hljs-built_in">yes</span><br>  -o smtpd_tls_auth_only=no  <br>  -o smtpd_client_restrictions=permit_sasl_authenticated,reject<br>  -o milter_macro_daemon_name=ORIGINATING<br>pickup    unix  n       -       n       60      1       pickup<br>cleanup   unix  n       -       n       -       0       cleanup<br>qmgr      unix  n       -       n       300     1       qmgr<br>tlsmgr    unix  -       -       n       1000?   1       tlsmgr<br>rewrite   unix  -       -       n       -       -       trivial-rewrite<br>bounce    unix  -       -       n       -       0       bounce<br>defer     unix  -       -       n       -       0       bounce<br>trace     unix  -       -       n       -       0       bounce<br>verify    unix  -       -       n       -       1       verify<br>flush     unix  n       -       n       1000?   0       flush<br>proxymap  unix  -       -       n       -       -       proxymap<br>proxywrite unix -       -       n       -       1       proxymap<br>smtp      unix  -       -       n       -       -       smtp<br>relay     unix  -       -       n       -       -       smtp<br>       -o smtp_helo_timeout=120 -o smtp_connect_timeout=120<br>showq     unix  n       -       n       -       -       showq<br>error     unix  -       -       n       -       -       error<br>retry     unix  -       -       n       -       -       error<br>discard   unix  -       -       n       -       -       discard<br><span class="hljs-built_in">local</span>     unix  -       n       n       -       -       <span class="hljs-built_in">local</span><br>virtual   unix  -       n       n       -       -       virtual<br>lmtp      unix  -       -       n       -       -       lmtp<br>anvil     unix  -       -       n       -       1       anvil<br>scache    unix  -       -       n       -       1       scache<br>EOF<br><br></code></pre></td></tr></table></figure><h3 id="与-MySQL-对接"><a href="#与-MySQL-对接" class="headerlink" title="与 MySQL 对接"></a>与 MySQL 对接</h3><p><strong>指定域名数据表</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">cat</span> &gt; /etc/postfix/mysql_mailbox_domains.cf &lt;&lt; <span class="hljs-string">EOF</span><br><span class="hljs-string"></span><br></code></pre></td></tr></table></figure><p>以下内容直接粘贴到命令行窗口中按回车即可。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sh">user = mail_sys<br>password = mail_sys<br>hosts = localhost<br>dbname = mail_sys<br>query = SELECT 1 FROM domains WHERE name=<span class="hljs-string">&#x27;%s&#x27;</span><br>EOF<br><br></code></pre></td></tr></table></figure><p><strong>指定用户数据表</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">cat</span> &gt; /etc/postfix/mysql_mailbox_maps.cf &lt;&lt; <span class="hljs-string">EOF</span><br><span class="hljs-string"></span><br></code></pre></td></tr></table></figure><p>以下内容直接粘贴到命令行窗口中按回车即可。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sh">user = mail_sys<br>password = mail_sys<br>hosts = localhost<br>dbname = mail_sys<br>query = SELECT 1 FROM <span class="hljs-built_in">users</span> WHERE email=<span class="hljs-string">&#x27;%s&#x27;</span><br>EOF<br><br></code></pre></td></tr></table></figure><p><strong>指定别名数据表</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">cat</span> &gt; /etc/postfix/mysql_alias_maps.cf &lt;&lt; <span class="hljs-string">EOF</span><br><span class="hljs-string"></span><br></code></pre></td></tr></table></figure><p>以下内容直接粘贴到命令行窗口中按回车即可。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sh">user = mail_sys<br>password = mail_sys<br>hosts = localhost<br>dbname = mail_sys<br>query = SELECT destination FROM aliases WHERE <span class="hljs-built_in">source</span>=<span class="hljs-string">&#x27;%s&#x27;</span><br>EOF<br><br></code></pre></td></tr></table></figure><p><strong>指定用户收件目标数据表</strong></p><p>（这个有点懵，Linode 上面的教程要求添加这个，懂的大神麻烦解释下）</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">cat</span> &gt; /etc/postfix/mysql_email2email.cf &lt;&lt; <span class="hljs-string">EOF</span><br><span class="hljs-string"></span><br></code></pre></td></tr></table></figure><p>以下内容直接粘贴到命令行窗口中按回车即可。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sh">user = mail_sys<br>password = mail_sys<br>hosts = localhost<br>dbname = mail_sys<br>query = SELECT email FROM <span class="hljs-built_in">users</span> WHERE email=<span class="hljs-string">&#x27;%s&#x27;</span><br>EOF<br><br></code></pre></td></tr></table></figure><h3 id="测试数据库读取"><a href="#测试数据库读取" class="headerlink" title="测试数据库读取"></a>测试数据库读取</h3><p>启动 Postfix 服务</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">systemctl start postfix<br><br></code></pre></td></tr></table></figure><p>测试域名数据表的读取</p><p>下面的 example.com 请替换为自己设定的域名。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">postmap -q example.com mysql:/etc/postfix/mysql_mailbox_domains.cf<br><br></code></pre></td></tr></table></figure><p>若返回 1 ，则说明设置正确。</p><p>测试用户名数据表的读取</p><p>下面的 <a href="mailto:&#x75;&#115;&#x65;&#114;&#x31;&#64;&#101;&#x78;&#x61;&#109;&#x70;&#108;&#101;&#46;&#x63;&#x6f;&#109;">user1@example.com</a> 请替换为自己设定的用户名其中一个。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">postmap -q user1@example.com mysql:/etc/postfix/mysql_mailbox_maps.cf<br><br></code></pre></td></tr></table></figure><p>若返回 1 ，则说明设置正确。</p><p>测试别名数据表的读取（可选）</p><p>下面的 <a href="mailto:&#117;&#x73;&#101;&#x72;&#x31;&#x31;&#x40;&#x65;&#x78;&#x61;&#109;&#x70;&#108;&#x65;&#x2e;&#99;&#111;&#x6d;">user11@example.com</a> 请替换为自己设定的别名其中一个。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">postmap -q user11@example.com mysql:/etc/postfix/mysql_alias_maps.cf<br><br></code></pre></td></tr></table></figure><p>若返回别名所对应的真实用户名 ，则说明设置正确。</p><p>停止 Postfix 服务</p><p>等全部配置完成后再启动。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">systemctl stop postfix<br><br></code></pre></td></tr></table></figure><h3 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs"><br></code></pre></td></tr></table></figure><h2 id="Dovecot"><a href="#Dovecot" class="headerlink" title="Dovecot"></a>Dovecot</h2><h3 id="安装-2"><a href="#安装-2" class="headerlink" title="安装"></a>安装</h3><p>卸载 sendmail</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">yum remove sendmail<br><br></code></pre></td></tr></table></figure><p>安装 Dovecot</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">yum install dovecot<br><br></code></pre></td></tr></table></figure><p>注意：CentOS 6 需要安装 managesieve</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">yum install dovecot-pigeonhole<br><br></code></pre></td></tr></table></figure><h3 id="备份原版配置文件-1"><a href="#备份原版配置文件-1" class="headerlink" title="备份原版配置文件"></a>备份原版配置文件</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">cp</span> -r /etc/dovecot /etc/dovecot.bak<br><br></code></pre></td></tr></table></figure><h3 id="修改-dovecot-conf"><a href="#修改-dovecot-conf" class="headerlink" title="修改 dovecot.conf"></a>修改 dovecot.conf</h3><blockquote><p><strong>说明</strong><br>• 该文件配置 Dovecot 的全局参数。</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">cat</span> &gt; /etc/dovecot/dovecot.conf &lt;&lt; <span class="hljs-string">EOF</span><br><span class="hljs-string"></span><br></code></pre></td></tr></table></figure><p>以下内容直接粘贴到命令行窗口中按回车即可。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sh">protocols = imap lmtp<br>dict &#123;<br>&#125;<br>!include conf.d/*.conf<br>!include_try local.conf<br>EOF<br><br></code></pre></td></tr></table></figure><h3 id="修改-conf-d-10-mail-conf"><a href="#修改-conf-d-10-mail-conf" class="headerlink" title="修改 conf.d&#x2F;10-mail.conf"></a>修改 conf.d&#x2F;10-mail.conf</h3><blockquote><p><strong>说明</strong><br>• 该文件配置邮箱文件存储的位置和命名空间。</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">cat</span> &gt; /etc/dovecot/conf.d/10-mail.conf &lt;&lt; <span class="hljs-string">EOF</span><br><span class="hljs-string"></span><br></code></pre></td></tr></table></figure><p>以下内容直接粘贴到命令行窗口中按回车即可。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sh">namespace inbox &#123;<br>  inbox = <span class="hljs-built_in">yes</span><br>&#125;<br>first_valid_uid = 1000<br>mbox_write_locks = fcntl<br>mail_location = maildir:/var/spool/mail/%d/%n<br>mail_privileged_group = mail<br>EOF<br><br></code></pre></td></tr></table></figure><h3 id="修改-conf-d-15-mailboxes-conf"><a href="#修改-conf-d-15-mailboxes-conf" class="headerlink" title="修改 conf.d&#x2F;15-mailboxes.conf"></a>修改 conf.d&#x2F;15-mailboxes.conf</h3><blockquote><p><strong>说明</strong><br>• 该文件配置邮箱内部的目录结构。</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">cat</span> &gt; /etc/dovecot/conf.d/15-mailboxes.conf &lt;&lt; <span class="hljs-string">EOF</span><br><span class="hljs-string"></span><br></code></pre></td></tr></table></figure><p>以下内容直接粘贴到命令行窗口中按回车即可。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs sh">namespace inbox &#123;<br>  mailbox Drafts &#123;<br>    auto = create<br>    special_use = \Drafts<br>  &#125;<br>  mailbox Trash &#123;<br>    auto = create<br>    special_use = \Trash<br>  &#125;<br>  mailbox Sent &#123;<br>    auto = create<br>    special_use = \Sent<br>  &#125;<br>&#125;<br>EOF<br><br></code></pre></td></tr></table></figure><p>注意</p><p>dovecot2.3以下放入空内容就好</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh">namespace inbox &#123;<br>&#125;<br>EOF<br><br></code></pre></td></tr></table></figure><h3 id="修改-conf-d-10-auth-conf"><a href="#修改-conf-d-10-auth-conf" class="headerlink" title="修改 conf.d&#x2F;10-auth.conf"></a>修改 conf.d&#x2F;10-auth.conf</h3><blockquote><p><strong>说明</strong><br>• 该文件配置用户身份认证流程。</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">cat</span> &gt; /etc/dovecot/conf.d/10-auth.conf &lt;&lt; <span class="hljs-string">EOF</span><br><span class="hljs-string"></span><br></code></pre></td></tr></table></figure><p>以下内容直接粘贴到命令行窗口中按回车即可。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh">auth_mechanisms = plain login<br>!include auth-sql.conf.ext<br>EOF<br><br></code></pre></td></tr></table></figure><h3 id="修改-conf-d-auth-sql-conf-ext"><a href="#修改-conf-d-auth-sql-conf-ext" class="headerlink" title="修改 conf.d&#x2F;auth-sql.conf.ext"></a>修改 conf.d&#x2F;auth-sql.conf.ext</h3><blockquote><p><strong>说明</strong><br>• 该文件配置数据库认证的参数。</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">cat</span> &gt; /etc/dovecot/conf.d/auth-sql.conf.ext &lt;&lt; <span class="hljs-string">EOF</span><br><span class="hljs-string"></span><br></code></pre></td></tr></table></figure><p>以下内容直接粘贴到命令行窗口中按回车即可。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sh">passdb &#123;<br>  driver = sql<br>  args = /etc/dovecot/dovecot-sql.conf.ext<br>&#125;<br>userdb &#123;<br>  driver = static<br>  args = uid=mail_sys gid=mail_sys home=/var/spool/mail/%d/%n<br>&#125;<br>EOF<br><br></code></pre></td></tr></table></figure><h3 id="修改-dovecot-sql-conf-ext"><a href="#修改-dovecot-sql-conf-ext" class="headerlink" title="修改 dovecot-sql.conf.ext"></a>修改 dovecot-sql.conf.ext</h3><blockquote><p><strong>说明</strong><br>• 该文件配置验证用户名密码所用的数据表以及认证方法。</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">cat</span> &gt; /etc/dovecot/dovecot-sql.conf.ext &lt;&lt; <span class="hljs-string">EOF</span><br><span class="hljs-string"></span><br></code></pre></td></tr></table></figure><p>以下内容直接粘贴到命令行窗口中按回车即可。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sh">driver = mysql<br>connect = host=localhost dbname=mail_sys user=mail_sys password=mail_sys<br>default_pass_scheme = SHA512-CRYPT<br>password_query = SELECT email as user, password FROM <span class="hljs-built_in">users</span> WHERE email=<span class="hljs-string">&#x27;%u&#x27;</span>;<br>EOF<br><br></code></pre></td></tr></table></figure><h3 id="修改-conf-d-10-ssl-conf"><a href="#修改-conf-d-10-ssl-conf" class="headerlink" title="修改 conf.d&#x2F;10-ssl.conf"></a>修改 conf.d&#x2F;10-ssl.conf</h3><blockquote><p><strong>说明</strong><br>• 该文件配置 SSL 加密参数。</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">cat</span> &gt; /etc/dovecot/conf.d/10-ssl.conf &lt;&lt; <span class="hljs-string">EOF</span><br><span class="hljs-string"></span><br></code></pre></td></tr></table></figure><p>请按实际情况以及注释提示<strong>修改以下内容</strong>，完成去除 # 号和后面的注释，然后粘贴到命令行窗口中按回车即可。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sh">ssl = required<br>ssl_cert = &lt;/etc/pki/tls/certs/cert.pem<span class="hljs-comment"># example.com 证书文件位置，需要修改</span><br>ssl_key = &lt;/etc/pki/tls/certs/key.pem<span class="hljs-comment"># example.com 证书私钥文件位置，需要修改</span><br>ssl_protocols = !SSLv3<br>ssl_cipher_list = ALL:!LOW:!SSLv3:!EXP:!aNULL<br>ssl_prefer_server_ciphers = no<br>EOF<br><br></code></pre></td></tr></table></figure><h3 id="修改-conf-d-10-master-conf"><a href="#修改-conf-d-10-master-conf" class="headerlink" title="修改 conf.d&#x2F;10-master.conf"></a>修改 conf.d&#x2F;10-master.conf</h3><blockquote><p><strong>说明</strong><br>• 该文件配置 Dovecot 中各服务的参数。</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">cat</span> &gt; /etc/dovecot/conf.d/10-master.conf &lt;&lt; <span class="hljs-string">EOF</span><br><span class="hljs-string"></span><br></code></pre></td></tr></table></figure><p>以下内容直接粘贴到命令行窗口中按回车即可。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs sh">service imap-login &#123;<br>  inet_listener imap &#123;<br>    port = 143<br>  &#125;<br>  inet_listener imaps &#123;<br>    port = 993<br>    ssl = <span class="hljs-built_in">yes</span><br>  &#125;<br>&#125;<br><br>service lmtp &#123;<br>    unix_listener /var/spool/postfix/private/dovecot-lmtp &#123;<br>    mode = 0600<br>    user = postfix<br>    group = postfix<br>  &#125;<br>&#125;<br><br>service imap &#123;<br><br>&#125;<br><br>service auth &#123;<br>  unix_listener /var/spool/postfix/private/auth &#123;<br>    mode = 0666<br>    user = postfix<br>    group = postfix<br>  &#125;<br><br>  unix_listener auth-userdb &#123;<br>    mode = 0600<br>    user = mail_sys<br>  &#125;<br>  user = dovecot<br>&#125;<br><br>service auth-worker &#123;<br>  user = mail_sys<br>&#125;<br><br>service dict &#123;<br>  unix_listener dict &#123;<br>    mode = 0660<br>    user = mail<br>    group = mail<br>  &#125;<br>&#125;<br>EOF<br><br></code></pre></td></tr></table></figure><h3 id="日志-1"><a href="#日志-1" class="headerlink" title="日志"></a>日志</h3><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs arcade">/<span class="hljs-keyword">var</span>/<span class="hljs-built_in">log</span>/maillog<br><br></code></pre></td></tr></table></figure><h2 id="配置-OpenDKIM"><a href="#配置-OpenDKIM" class="headerlink" title="配置 OpenDKIM"></a>配置 OpenDKIM</h2><p>安装</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">yum install opendkim<br><br></code></pre></td></tr></table></figure><h3 id="修改-OpenDKIM-配置文件"><a href="#修改-OpenDKIM-配置文件" class="headerlink" title="修改 OpenDKIM 配置文件"></a>修改 OpenDKIM 配置文件</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">cat</span> &gt; /etc/opendkim.conf &lt;&lt; <span class="hljs-string">EOF</span><br><span class="hljs-string"></span><br></code></pre></td></tr></table></figure><p>请按实际情况以及注释提示<strong>修改以下内容</strong>，完成去除 # 号和后面的注释，然后粘贴到命令行窗口中按回车即可。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sh">Syslog <span class="hljs-built_in">yes</span><br>UMask 002<br>OversignHeaders From<br>Socket inet:8891@127.0.0.1<br>Domain example.com <span class="hljs-comment">#本机域名，需要修改</span><br>KeyFile /etc/opendkim/keys/mail.private<br>Selector mail<br>RequireSafeKeys no<br>EOF<br><br></code></pre></td></tr></table></figure><h3 id="生成私钥"><a href="#生成私钥" class="headerlink" title="生成私钥"></a>生成私钥</h3><p>下面的 example.com 请替换成您的域名。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">opendkim-genkey -D /etc/opendkim/keys/ -d example.com -s mail &amp;&amp; chown -R opendkim:opendkim /etc/opendkim/keys/<br><br></code></pre></td></tr></table></figure><h3 id="配置-Postfix-的-main-cf"><a href="#配置-Postfix-的-main-cf" class="headerlink" title="配置 Postfix 的 main.cf"></a>配置 Postfix 的 main.cf</h3><p>配置发件增加 DKIM 签名。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">cat</span> &gt;&gt; /etc/postfix/main.cf &lt;&lt; <span class="hljs-string">EOF</span><br><span class="hljs-string"></span><br></code></pre></td></tr></table></figure><p>以下内容直接粘贴到命令行窗口中按回车即可。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sh">milter_protocol = 2<br>milter_default_action = accept<br>smtpd_milters = inet:localhost:8891<br>non_smtpd_milters = inet:localhost:8891<br>EOF<br><br></code></pre></td></tr></table></figure><h3 id="启动所有服务"><a href="#启动所有服务" class="headerlink" title="启动所有服务"></a>启动所有服务</h3><p>CentOS 7</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">systemctl start postfix dovecot opendkim<br><br></code></pre></td></tr></table></figure><p>CentOS 6</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">service postfix <span class="hljs-literal">start</span><br>service dovecot <span class="hljs-literal">start</span><br>service opendkim <span class="hljs-literal">start</span><br><br></code></pre></td></tr></table></figure><p>如需开机启动，请执行以下命令。</p><p>CentOS 7</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">systemctl <span class="hljs-built_in">enable</span> postfix dovecot opendkim mariadb<br><br></code></pre></td></tr></table></figure><p>CentOS 6</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh">chkconfig postfix on<br>chkconfig dovecot on<br>chkconfig opendkim on<br>chkconfig mariadb on<br><br></code></pre></td></tr></table></figure><h2 id="配置域名参数"><a href="#配置域名参数" class="headerlink" title="配置域名参数"></a>配置域名参数</h2><h3 id="A-记录的设定"><a href="#A-记录的设定" class="headerlink" title="A 记录的设定"></a>A 记录的设定</h3><p>在域名控制面板中添加一条记录，<strong>主机记录</strong>填 <strong>@</strong> ,<strong>记录类型</strong>选 <strong>A</strong> <strong>记录值</strong>填 <strong>1.1.1.1</strong> ，其他保持默认，保存即可。</p><h3 id="MX-记录的设定"><a href="#MX-记录的设定" class="headerlink" title="MX 记录的设定"></a>MX 记录的设定</h3><p>在域名控制面板中添加一条记录，<strong>主机记录</strong>填 <strong>@</strong> ,<strong>记录类型</strong>选 <strong>MX</strong> ,<strong>记录值</strong>填 <strong><a href="http://mail.example.com/">http://mail.example.com</a></strong>，其他保持默认；<br>再添加一条记录，<strong>主机记录</strong>填 <strong>mail</strong> ,<strong>记录类型</strong>选 <strong>A</strong> ,<strong>记录值</strong>填 <strong>1.1.1.1</strong>，其他保持默认，保存即可。</p><h3 id="SPF-记录的设定"><a href="#SPF-记录的设定" class="headerlink" title="SPF 记录的设定"></a>SPF 记录的设定</h3><p>在域名控制面板中添加一条记录，<strong>主机记录</strong>填 <strong>@</strong> ,<strong>记录类型</strong>选 <strong>TXT</strong> ,<strong>记录值</strong>填 <strong>v&#x3D;spf1 mx -all</strong>，其他保持默认，保存即可。</p><h3 id="DMARC-记录的设定"><a href="#DMARC-记录的设定" class="headerlink" title="DMARC 记录的设定"></a>DMARC 记录的设定</h3><p>在域名控制面板中添加一条记录，<strong>主机记录</strong>填 <strong>_dmarc</strong> ,<strong>记录类型</strong>选 <strong>TXT</strong> ,<strong>记录值</strong>填 <strong>v&#x3D;DMARC1; p&#x3D;none</strong>，其他保持默认，保存即可。</p><h3 id="DKIM-记录的设定"><a href="#DKIM-记录的设定" class="headerlink" title="DKIM 记录的设定"></a>DKIM 记录的设定</h3><p>（以我的密钥文件为例）<br>执行以下命令</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">cat</span> /etc/opendkim/keys/mail.txt <br><br></code></pre></td></tr></table></figure><p>会出现以下结果</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">mail._domainkeyINTXT( <span class="hljs-string">&quot;v=DKIM1; k=rsa; &quot;</span><br>  <span class="hljs-string">&quot;p=MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDU5nkxbS36hOa2FCJqotvahTbxb83CvLt5XqV4WAPzJQmfaA1eHyvOz9XiZgE8vWRgP2jJFlL+J4yEroB3YV/8EBjAM8lFTi31DVgRsoHMwH6f3GuLAfcuVofymDfRxHxPzIlm7rgzfWwrGcPrIzt64NLuZG4yusTWp8MTfWZxvQIDAQAB&quot;</span> )  ; ----- DKIM key default <span class="hljs-keyword">for</span> example.com<br><br></code></pre></td></tr></table></figure><p>把括号内的值复制出来，去掉所有引号并整理成一行，形如：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">v=DKIM1; k=rsa; p=MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDU5nkxbS36hOa2FCJqotvahTbxb83CvLt5XqV4WAPzJQmfaA1eHyvOz9XiZgE8vWRgP2jJFlL+J4yEroB3YV/8EBjAM8lFTi31DVgRsoHMwH6f3GuLAfcuVofymDfRxHxPzIlm7rgzfWwrGcPrIzt64NLuZG4yusTWp8MTfWZxvQIDAQAB<br><br></code></pre></td></tr></table></figure><p>在域名控制面板中添加一条记录，<strong>主机记录</strong>填 <strong>mail._domainkey</strong> ,<strong>记录类型</strong>选 <strong>TXT</strong> ,<strong>记录值</strong>填 <strong>v&#x3D;DKIM1; k&#x3D;rsa; p&#x3D;MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDU5nkxbS36hOa2FCJqotvahTbxb83CvLt5XqV4WAPzJQmfaA1eHyvOz9XiZgE8vWRgP2jJFlL+J4yEroB3YV&#x2F;8EBjAM8lFTi31DVgRsoHMwH6f3GuLAfcuVofymDfRxHxPzIlm7rgzfWwrGcPrIzt64NLuZG4yusTWp8MTfWZxvQIDAQAB</strong>，其他保持默认，保存即可。</p><p>最终效果如图</p><p><img src="/./be066140513011e98a97e9942f6fcdb5/dns_settings.png"></p><h3 id="IP-反向解析的设定"><a href="#IP-反向解析的设定" class="headerlink" title="IP 反向解析的设定"></a>IP 反向解析的设定</h3><p>这个……普通家庭宽带用户就别想了，企业宽带和国内云主机用户需要网站通过备案才能设置。如果用国外云主机的话，有些可以支持。为您的域名配置 IP 地址反向解析可以大幅降低外发邮件被拒收的几率。</p><h2 id="过滤沟通-Amavisd-new"><a href="#过滤沟通-Amavisd-new" class="headerlink" title="过滤沟通 Amavisd-new"></a>过滤沟通 Amavisd-new</h2><p><a href="https://blog.51cto.com/freeloda/1246350">安装并配置病毒扫描与垃圾邮件过滤</a></p><h2 id="病毒扫描-ClamAV"><a href="#病毒扫描-ClamAV" class="headerlink" title="病毒扫描 ClamAV"></a>病毒扫描 ClamAV</h2><h2 id="垃圾邮件过滤-SpamAssassin"><a href="#垃圾邮件过滤-SpamAssassin" class="headerlink" title="垃圾邮件过滤 SpamAssassin"></a>垃圾邮件过滤 SpamAssassin</h2><h2 id="Policyd-白名单"><a href="#Policyd-白名单" class="headerlink" title="Policyd 白名单"></a>Policyd 白名单</h2><p><a href="https://wiki.policyd.org/download">官网</a>下载</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">wget https://download.policyd.org/v2.0.14/cluebringer-v2.0.14.tar.gz<br><br></code></pre></td></tr></table></figure><p>解压</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">tar -zxvf cluebringer-v2.0.14.tar.gz<br><br></code></pre></td></tr></table></figure><p>整合初始化 sql</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd ./cluebringer-v2.0.14/database<br><br></code></pre></td></tr></table></figure><p>执行shell</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">for i in core.tsql access_control.tsql quotas.tsql amavis.tsql checkhelo.tsql checkspf.tsql greylisting.tsql<br>do<br>  ./convert-tsql mysql $i<br>done &gt; policyd.sql<br><br></code></pre></td></tr></table></figure><p>使用 vim 替换错误 SQL 语法</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">%s/TYPE=InnoDB/ENGINE=InnoDB/g<br><br></code></pre></td></tr></table></figure><p>建库</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">mysql -u root -p -e <span class="hljs-string">&#x27;CREATE DATABASE policyd&#x27;</span><br><br></code></pre></td></tr></table></figure><p>初始化数据库</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">mysql -u root -p policyd &lt; policyd.sql<br><br></code></pre></td></tr></table></figure><p>复制文件 cbp&#x2F; &amp; awitpt&#x2F;</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">mkdir</span> /usr/local/lib/cbpolicyd-2.0<br><br></code></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">cp</span> -r cbp /usr/local/lib/cbpolicyd-2.0/<br><span class="hljs-built_in">cp</span> -r awitpt/awitpt /usr/local/lib/cbpolicyd-2.0/<br><br></code></pre></td></tr></table></figure><p>复制文件 cbpolicyd 和 cbpadmin</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">cp</span> cbpadmin /usr/local/bin/<br><span class="hljs-built_in">cp</span> cbpolicyd /usr/local/sbin/<br><br></code></pre></td></tr></table></figure><p>设置系统目录</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">mkdir</span> /var/log/cbpolicyd<br><span class="hljs-built_in">mkdir</span> /var/run/cbpolicyd<br><br></code></pre></td></tr></table></figure><p>在 &#x2F;etc&#x2F;postfix&#x2F;main.cf 中配置</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-comment"># policyd</span><br><span class="hljs-attribute">smtpd_recipient_restrictions</span> = check_policy_service inet：<span class="hljs-number">127.0.0.1</span>：<span class="hljs-number">10031</span>，permit_mynetworks，...，...<br><br></code></pre></td></tr></table></figure><h2 id="日志-Awstats"><a href="#日志-Awstats" class="headerlink" title="日志 Awstats"></a>日志 Awstats</h2><h2 id="防爆-fail2ban"><a href="#防爆-fail2ban" class="headerlink" title="防爆 fail2ban"></a>防爆 fail2ban</h2><h3 id="安装-3"><a href="#安装-3" class="headerlink" title="安装"></a>安装</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">yum install <br><br></code></pre></td></tr></table></figure><p>添加过滤配置 <code>/etc/fail2ban/filter.d/dovecot-pop3imap.conf</code></p><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs coq">[<span class="hljs-keyword">Definition</span>]<br>failregex = (?: pop3-login|<span class="hljs-type">imap</span>-login): .*(?:Authentication failure|<span class="hljs-type">Aborted</span> login \(auth failed|<span class="hljs-type">Aborted</span> login \(tried to use disabled|<span class="hljs-type">Disconnected</span> \(auth failed|<span class="hljs-type">Aborted</span> login \(\d+ authentication attempts).*rip=`&lt;HOST&gt;`<br><br></code></pre></td></tr></table></figure><p>添加配置 <code>/etc/fail2ban/jail.conf</code></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[dovecot-pop3imap]</span><br><span class="hljs-attr">enabled</span> = <span class="hljs-literal">true</span><br><span class="hljs-attr">filter</span> = dovecot-pop3imap<br><span class="hljs-attr">action</span> = iptables-multiport[name=dovecot-pop3imap, port=<span class="hljs-string">&quot;pop3,imap&quot;</span>, protocol=tcp]<br><span class="hljs-attr">logpath</span> = /var/log/maillog<br><span class="hljs-attr">maxretry</span> = <span class="hljs-number">20</span><br><span class="hljs-attr">findtime</span> = <span class="hljs-number">1200</span><br><span class="hljs-attr">bantime</span> = <span class="hljs-number">1200</span><br><br></code></pre></td></tr></table></figure><h3 id="运行服务"><a href="#运行服务" class="headerlink" title="运行服务"></a>运行服务</h3><p>启动</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh">service fail2ban start<br><br>systemctl start fail2ban<br><br></code></pre></td></tr></table></figure><p>自启</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh">chkconfig fail2ban on<br><br>systemctl <span class="hljs-built_in">enable</span> fail2ban<br><br></code></pre></td></tr></table></figure><h2 id="配置-Web-邮箱"><a href="#配置-Web-邮箱" class="headerlink" title="配置 Web 邮箱"></a>配置 Web 邮箱</h2><h3 id="安装-Nginx、PHP"><a href="#安装-Nginx、PHP" class="headerlink" title="安装 Nginx、PHP"></a>安装 Nginx、PHP</h3><p>Nginx</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">yum install nginx<br><br></code></pre></td></tr></table></figure><p>PHP</p><p>检查当前版本</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">yum list installed | grep php<br><br></code></pre></td></tr></table></figure><p>确保可以卸载旧版本</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">yum remove php*<br><br></code></pre></td></tr></table></figure><p>添加第三方yum源</p><p>CentOs 5.x</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">rpm -Uvh &lt;http://mirror.webtatic.com/yum/el5/latest.rpm<br><br></code></pre></td></tr></table></figure><p>CentOs 6.x</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">rpm -Uvh &lt;http://mirror.webtatic.com/yum/el6/latest.rpm<br><br></code></pre></td></tr></table></figure><p>CentOs 7.X</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">rpm -Uvh &lt;https://mirror.webtatic.com/yum/el7/epel-release.rpm&gt;<br>rpm -Uvh &lt;https://mirror.webtatic.com/yum/el7/webtatic-release.rpm&gt;<br><br></code></pre></td></tr></table></figure><p>安装php及其组件</p><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs smali">yum install php56w-mysql php56w-fpm php56w-xml php56w-mbstring<br><br></code></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">yum install -y php70w.x86_64 php70w-cli.x86_64 php70w-common.x86_64 php70w-gd.x86_64 php70w-ldap.x86_64 php70w-mbstring.x86_64 php70w-mcrypt.x86_64 php70w-mysql.x86_64 php70w-pdo.x86_64 php70w-fpm.x86_64 php70w-xml.x86_64<br><br></code></pre></td></tr></table></figure><h3 id="下载并安装-Roundcube"><a href="#下载并安装-Roundcube" class="headerlink" title="下载并安装 Roundcube"></a>下载并安装 Roundcube</h3><p>下载</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">wget https://github.com/roundcube/roundcubemail/releases/download/1.3.0/roundcubemail-1.3.0-complete.tar.gz<br><br></code></pre></td></tr></table></figure><p>解压 &amp; 安装</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">tar -xf roundcubemail-1.3.0-complete.tar.gz &amp;&amp; <span class="hljs-built_in">mv</span> roundcubemail-1.3.0 /usr/share/roundcube &amp;&amp; <span class="hljs-built_in">chown</span> -R apache:apache /usr/share/roundcube<br><br></code></pre></td></tr></table></figure><h3 id="配置-Nginx-、PHP"><a href="#配置-Nginx-、PHP" class="headerlink" title="配置 Nginx 、PHP"></a>配置 Nginx 、PHP</h3><p>配置 Nginx</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">vim /etc/nginx/conf.d/mail.conf<br><br></code></pre></td></tr></table></figure><p>请按实际情况以及注释提示<strong>修改以下内容</strong>，在命令行窗口按下 i ，将内容直接粘贴到命令行窗口中，再按下 ESC ，最后输入 :wq 按回车。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">server</span> &#123;<br>    <span class="hljs-attribute">listen</span>       <span class="hljs-number">80</span>;<br>    <span class="hljs-attribute">server_name</span>  mail.example.com; <span class="hljs-comment"># 本机域名前面加上mail. 需要修改</span><br>    <span class="hljs-attribute">return</span> <span class="hljs-number">301</span> https://<span class="hljs-variable">$server_name</span><span class="hljs-variable">$request_uri</span>;<br>&#125;<br><br><span class="hljs-section">server</span> &#123;<br>    <span class="hljs-attribute">listen</span>       <span class="hljs-number">443</span> ssl http2;<br>    <span class="hljs-attribute">server_name</span>  mail.example.com; <span class="hljs-comment"># 本机域名前面加上mail. 需要修改</span><br>    <span class="hljs-attribute">ssl_certificate</span> <span class="hljs-string">&quot;/etc/pki/tls/certs/cert.pem&quot;</span>; <span class="hljs-comment"># mail.example.com 证书文件位置，需要修改</span><br>    <span class="hljs-attribute">ssl_certificate_key</span> <span class="hljs-string">&quot;/etc/pki/tls/certs/key.pem&quot;</span>; <span class="hljs-comment"># mail.example.com 证书私钥文件位置，需要修改</span><br>    <span class="hljs-attribute">add_header</span> Strict-Transport-Security <span class="hljs-string">&quot;max-age=15552000; includeSubDomains&quot;</span>;<br>    <span class="hljs-section">location</span> / &#123;<br>     <span class="hljs-attribute">root</span>         /usr/share/roundcube;<br>     <span class="hljs-attribute">index</span>        index.php;     <br>    &#125;<br><span class="hljs-section">location</span> <span class="hljs-regexp">~ .php$</span> &#123;<br>        <span class="hljs-attribute">root</span>         /usr/share/roundcube;<br>        <span class="hljs-attribute">fastcgi_pass</span>   <span class="hljs-number">127.0.0.1:9000</span>;<br>        <span class="hljs-attribute">fastcgi_index</span>  index.php;<br>        <span class="hljs-attribute">fastcgi_param</span>  SCRIPT_FILENAME  <span class="hljs-variable">$document_root</span><span class="hljs-variable">$fastcgi_script_name</span>;<br>        <span class="hljs-attribute">include</span>        fastcgi_params;<br>    &#125;<br><br>&#125;<br><br></code></pre></td></tr></table></figure><p><strong>配置 PHP</strong></p><p>设置时区</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;date.timezone = Asia/Shanghai&quot;</span> &gt;&gt; /etc/php.ini <br><br></code></pre></td></tr></table></figure><p>创建会话文件夹</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">mkdir</span> /var/lib/php/session &amp;&amp; <span class="hljs-built_in">chown</span> apache:apache /var/lib/php/session<br><br></code></pre></td></tr></table></figure><h3 id="配置数据库"><a href="#配置数据库" class="headerlink" title="配置数据库"></a>配置数据库</h3><p>进入 MySQL 命令行界面</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs text">mysql -u root -p<br><br>Enter password: #输入密码按回车<br><br></code></pre></td></tr></table></figure><p>创建一个用户用于读写 Roundcube 数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mysql">CREATE USER &#x27;roundcube&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;roundcube&#x27;;<br><br></code></pre></td></tr></table></figure><p>创建 Roundcube 数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mysql">CREATE DATABASE roundcube;<br><br></code></pre></td></tr></table></figure><p>为用户授予读写权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mysql">GRANT ALL ON roundcube.* TO &#x27;roundcube&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;roundcube&#x27;;<br><br></code></pre></td></tr></table></figure><p>刷新权限表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mysql">FLUSH PRIVILEGES;<br><br></code></pre></td></tr></table></figure><p>数据库设置完成</p><h3 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h3><p>CentOS 6</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">service nginx <span class="hljs-literal">start</span><br>service php-fpm <span class="hljs-literal">start</span><br><br></code></pre></td></tr></table></figure><p>CentOS 7</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">systemctl start nginx php-fpm<br><br></code></pre></td></tr></table></figure><p>如需开机启动，请执行以下命令。</p><p>CentOS 6</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">chkconfig</span> nginx <span class="hljs-literal">on</span><br>chkconfig php-fpm <span class="hljs-literal">on</span><br><br></code></pre></td></tr></table></figure><p>CentOS 7</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">systemctl <span class="hljs-built_in">enable</span> nginx php-fpm<br><br></code></pre></td></tr></table></figure><h3 id="配置-Roundcube"><a href="#配置-Roundcube" class="headerlink" title="配置 Roundcube"></a>配置 Roundcube</h3><p>打开浏览器，输入 <a href="https://mail.example.com/installer/?_step=1">https://mail.example.com/installer/?_step&#x3D;1</a> ，回车打开。然后按图片提示进行配置。</p><p><img src="/./be066140513011e98a97e9942f6fcdb5/roundcube_01.png" alt="img"></p><p><img src="/./be066140513011e98a97e9942f6fcdb5/roundcube_02.png" alt="img"></p><p><img src="/./be066140513011e98a97e9942f6fcdb5/roundcube_03.png" alt="img"></p><p><img src="/./be066140513011e98a97e9942f6fcdb5/roundcube_04.png" alt="img"></p><p><img src="/./be066140513011e98a97e9942f6fcdb5/roundcube_05.png" alt="img"></p><p><img src="/./be066140513011e98a97e9942f6fcdb5/roundcube_06.png" alt="img"></p><p><img src="/./be066140513011e98a97e9942f6fcdb5/roundcube_07.png" alt="img"></p><p>配置完成后，关闭浏览器页面。执行以下命令来使安装程序不可用。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">chmod -R 000 /usr/share/roundcube/installer/<br><br></code></pre></td></tr></table></figure><h3 id="登录测试"><a href="#登录测试" class="headerlink" title="登录测试"></a>登录测试</h3><p>打开浏览器，输入 <a href="http://link.zhihu.com/?target=https://mail.example.com/">https://mail.example.com</a> ，然后输入您的用户名密码登录，测试收发邮件</p><h3 id="日志-2"><a href="#日志-2" class="headerlink" title="日志"></a>日志</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/usr/</span>share<span class="hljs-regexp">/roundcube/</span>logs/*<br><br></code></pre></td></tr></table></figure><h2 id="测试工具"><a href="#测试工具" class="headerlink" title="测试工具"></a>测试工具</h2><p>打开浏览器，输入 <a href="http://www.mail-tester.com/">http://www.mail-tester.com</a> ，回车打开。发一封邮件到它指定的邮箱里。然后过一分钟左右查看下结果，重点检查 SPF 记录、DMARC 记录和 DKIM 签名是不是有效的。</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://zhuanlan.zhihu.com/p/28816035">在 CentOS 7 上搭建属于自己的 “完美” 邮件系统</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>自建邮件服务器-开源集成方案iRedMail</title>
    <link href="/2019/03/22/%E8%87%AA%E5%BB%BA%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8-%E5%BC%80%E6%BA%90%E9%9B%86%E6%88%90%E6%96%B9%E6%A1%88iRedMail/"/>
    <url>/2019/03/22/%E8%87%AA%E5%BB%BA%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8-%E5%BC%80%E6%BA%90%E9%9B%86%E6%88%90%E6%96%B9%E6%A1%88iRedMail/</url>
    
    <content type="html"><![CDATA[<p>自建邮件服务器-开源集成方案iRedMail</p><span id="more"></span><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><p>系统 CentOS 7</p><p>域名 example.com</p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><ol><li><p>设置 hostname</p><p>RHEL&#x2F;CentOS 6，<code>/etc/sysconfig/network</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">HOSTNAME=mail<br></code></pre></td></tr></table></figure><p>CentOS 7</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">hostnamectl set-hostname mail<br></code></pre></td></tr></table></figure><p>例如完整域名是 mail.example.com，应该设置 mail</p><p>验证主机名</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">hostname -f<br></code></pre></td></tr></table></figure></li><li><p>设置 host</p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs accesslog"><span class="hljs-number">127.0.0.1</span>   mail.example.com mail localhost localhost.localdomain<br></code></pre></td></tr></table></figure><p>FQDN 主机名列在第一个，短主机名列在第二个</p></li><li><p>设置 SELinux</p><p>查看现状态</p><p>iRedMail 不支持 SELinux，所以需要在 &#x2F;etc&#x2F;selinux&#x2F;config 文件里禁用它</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">SELINUX</span><span class="hljs-operator">=</span>disabled<br></code></pre></td></tr></table></figure><p>如果不希望禁用 SELinux，可以设置为让它打印警告信息但不强制限制</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">SELINUX</span><span class="hljs-operator">=</span>permissive<br></code></pre></td></tr></table></figure></li><li><p>上传最新版 iRedMail 安装包</p></li><li><p>解压 iRedMail</p><p>安装解压工具</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">yum install  bzip2<br></code></pre></td></tr></table></figure><p>解压</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">cd</span> /program<br></code></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">tar xjf iRedMail-x.y.z.tar.bz2<br></code></pre></td></tr></table></figure></li><li><p>运行安装程序</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">cd</span> /root/iRedMail-x.y.z/<br>bash iRedMail.sh<br></code></pre></td></tr></table></figure></li><li><p>安装过程</p><p>以下是官方安装过程</p><ul><li>欢迎和感谢使用</li></ul><p><img src="/./1e9e7c104c4811e98c245f558f23e5ab/welcome.png" alt="img"></p><ul><li>指定用于存储用户邮箱的路径。默认是 <code>/var/vmail/</code>。</li></ul><p><img src="/./1e9e7c104c4811e98c245f558f23e5ab/mail_storage.png" alt="img"></p><ul><li>选择用于存储邮件账号的数据库。</li></ul><p>Note</p><p>各个数据库之间没有太大区别，建议使用自己熟悉的数据库，便于后期维护。</p><p><img src="/./1e9e7c104c4811e98c245f558f23e5ab/backends.png" alt="img"></p><ul><li>如果选择 OpenLDAP 数据库用于存储邮件账号，安装程序会要求你输入 LDAP 前缀：</li></ul><p><img src="/./1e9e7c104c4811e98c245f558f23e5ab/ldap_suffix.png" alt="img"></p><p>MySQL&#x2F;MariaDB&#x2F;PostgreSQL 用户</p><p>如果选择 MySQL&#x2F;MariaDB&#x2F;PostgreSQL 用于存储邮件账号, 安装程序会为数据库的 root 用户生成一个随机的强密码，安装完成后可以在 <code>iRedMail.tips</code> 文件里找到。</p><ul><li>添加第一个邮件域名</li></ul><p><img src="/./1e9e7c104c4811e98c245f558f23e5ab/first_domain.png" alt="img"></p><p>这里填 example.com</p><ul><li>设置邮件管理员的密码</li></ul><p>Note</p><p>该账号即是邮件管理员，也是普通的邮件账号，可以登录管理后台和 webmail。</p><p><img src="/./1e9e7c104c4811e98c245f558f23e5ab/admin_pw.png" alt="img"></p><ul><li>可选的组件</li></ul><p><img src="/./1e9e7c104c4811e98c245f558f23e5ab/optional_components.png" alt="img"></p><p>回答完上面的几个问题之后，安装程序给出本次安装的基本信息并要求确认是否实际 执行安装，请输入 <code>y</code> 或 <code>Y</code> 并按回车键确认，或 <code>n</code>, <code>N</code> 并按回车键中止安装。</p><p><img src="/./1e9e7c104c4811e98c245f558f23e5ab/review.png" alt="img"></p></li></ol><p>安装完成后你必须知道的几个重要事项</p><ul><li>邮件服务器最薄弱的环节是用户的弱密码，所以请一定强制你的用户使用强度高的密码。</li><li>阅读 &#x2F;root&#x2F;iRedMail-x.y.z&#x2F;iRedMail.tips 文件，它包含了：<ul><li>各个 web 程序的访问地址（URL），用户名和密码。</li><li>各个组件的配置文件路径。除此之外还应该阅读文档：Locations of configuration and log files of major components.</li><li>以及其它一些重要和敏感信息</li></ul></li><li>设置 DNS 记录</li><li>如何配置邮件客户端程序</li><li>强烈建议获取 SSL 证书以避免每次访问 web 程序时烦人的自签名 SSL 证书警告， Let’s Encrypt 提供免费的 SSL 证书。可根据该文档 配置获取的证书：use a SSL certificate.</li><li>如果需要批量添加邮件账号，可以参考以下针对不同数据库的批量建账号的文档： OpenLDAP， MySQL&#x2F;MariaDB&#x2F;PostgreSQL。</li><li>如果这是一台繁忙的服务器，这里有一些提升性能的建议。</li></ul><p>访问 webmail 和其它 web 程序<br>安装完成后，可以通过以下 URL 访问相关程序。注意：请将 &lt;server&gt; 替换为实际的 服务器地址。</p><ul><li>Roundcube webmail: <a href="https://mail.example.com/mail/">https://mail.example.com/mail/</a></li><li>SOGo Groupware: <a href="https://mail.example.com/SOGo">https://mail.example.com/SOGo</a></li><li>Web 管理后台: httpS:&#x2F;&#x2F;mail.example.com&#x2F;iredadmin&#x2F;</li><li>Awstats: httpS:&#x2F;&#x2F;mail.example.com&#x2F;awstats&#x2F;awstats.pl?config&#x3D;web (or <code>?config=smtp</code> for SMTP log)</li></ul><h1 id="DNS-设置"><a href="#DNS-设置" class="headerlink" title="DNS 设置"></a>DNS 设置</h1><p><img src="/./1e9e7c104c4811e98c245f558f23e5ab/dns_settings.png" alt="img"></p><p>SPF</p><p>SPF 记录是一种域名服务 (DNS) 记录，可确定允许哪些邮件服务器代表您的域来发送电子邮件</p><p>这里说几个常用的：</p><ol><li>a：所有该域名的A记录都为通过，a不指定的情况下为当前域名</li><li>ip4：指定通过的IP</li><li>mx：mx记录域名的A记录IP可以发邮件</li><li>all：结束标志，“-”表示只允许设置的记录为通过，“~”表示失败，通常用于测试，“+”表示忽略SPF</li></ol><p>DKIM</p><p>centos6</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">amavisd showkeys<br></code></pre></td></tr></table></figure><p>centos7</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">amavisd -c /etc/amavisd/amavisd.conf showkeys<br></code></pre></td></tr></table></figure><p>复制结果，添加到DNS，主机记录为<code>dkim._domainkey</code>，<code>TXT</code>类别</p><p>DMARC</p><p>DMARC协议是有效解决信头From伪造而诞生的一种新的邮件来源验证手段，为邮件发件人地址提供强大保护，并在邮件收发双方之间建立起一个数据反馈机制。</p><ul><li>p：用于告知收件方，当检测到某邮件存在伪造我（发件人）的情况，收件方要做出什么处理，处理方式从轻到重依次为：none为不作任何处理；quarantine为将邮件标记为垃圾邮件；reject为拒绝该邮件。初期建议设置为none。</li><li>rua：用于在收件方检测后，将一段时间的汇总报告，发送到哪个邮箱地址。</li><li>ruf：用于当检测到伪造邮件时，收件方须将该伪造信息的报告发送到哪个邮箱地址。</li></ul><p>例如我设置的是v&#x3D;DMARC1;p&#x3D;reject;rua&#x3D;<a href="mailto:&#x78;&#x78;&#x40;&#108;&#x78;&#120;&#x2e;&#x63;&#111;&#109;">xx@lxx.com</a>，意思是拒绝伪造邮件，并且将一段时间的汇总报告发送给我。</p><p>添加到DNS</p><p>添加TXT记录，主机名：<code>_dmarc</code>，记录值：<code>v=DMARC1;p=reject;rua=xx@lxx.com</code></p><p>PTR</p><p>将 mail.xx.com 设置PTR</p><p>添加好了以后可以通过以下命令查看</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">dig -x  IP<br></code></pre></td></tr></table></figure><p>如果看到了PTR记录为你的域名那就说明成功了。</p><p>测试工具</p><p><a href="http://www.mail-tester.com/">http://www.mail-tester.com/</a></p><p><strong>iRedmail 主要组件</strong></p><ul><li>Apache</li><li>Nginx </li><li>PHP</li><li>MySQL</li><li>OpenLDAP</li><li>Postfix</li><li>Dovecot</li><li>Amavisd</li><li>ClamAV</li><li>SpamAssassin</li><li>Policyd</li><li>Pysieved</li><li>Roundcube</li><li>Awstats 6.9</li></ul><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://docs.iredmail.org/install.iredmail.on.rhel-zh_CN.html">iRedMail doc</a></p><p><a href="lomu.me/post/SPF-DKIM-DMARC-PTR">邮件服务器添加SPF、DKIM、DMARC、PTR提高送达率</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Docker 安装 GitLab 教程</title>
    <link href="/2019/02/05/docker/Docker%20%E5%AE%89%E8%A3%85%20Gitlab/"/>
    <url>/2019/02/05/docker/Docker%20%E5%AE%89%E8%A3%85%20Gitlab/</url>
    
    <content type="html"><![CDATA[<p><a href="about.gitlab.com">GitLab</a> 是由GitLab Inc.开发，使用<a href="https://zh.wikipedia.org/wiki/MIT%E8%A8%B1%E5%8F%AF%E8%AD%89">MIT许可证</a>的基于<a href="https://zh.wikipedia.org/wiki/%E4%BA%92%E8%81%94%E7%BD%91">网络</a>的<a href="https://zh.wikipedia.org/wiki/Git">Git</a><a href="https://zh.wikipedia.org/wiki/%E4%BB%93%E5%BA%93_(%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6)">仓库</a>管理工具，且具有<a href="https://zh.wikipedia.org/wiki/Wiki">wiki</a>和<a href="https://zh.wikipedia.org/wiki/%E4%BA%8B%E5%8A%A1%E8%B7%9F%E8%B8%AA%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F">issue跟踪</a>功能。常用于企业内部代码管理。</p><span id="more"></span><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>操作系统：Centos7</p><p>SeLinux：开启</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>启动容器</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sh">docker run --detach \<br>  --publish 2443:443 --publish 2280:80 --publish 2222:22 \<br>  --name gitlab \<br>  --hostname 10.10.18.155 \<br>  --restart unless-stopped \<br>  --volume /program/gitlab/config:/etc/gitlab:Z \<br>  --volume /program/gitlab/logs:/var/log/gitlab:Z \<br>  --volume /program/gitlab/data:/var/opt/gitlab:Z \<br>  gitlab/gitlab-ce:latest<br></code></pre></td></tr></table></figure><h2 id="备份"><a href="#备份" class="headerlink" title="备份"></a>备份</h2><p>查看 <code>GitLab</code> 版本号</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker <span class="hljs-built_in">exec</span> -it gitlab <span class="hljs-built_in">cat</span> /opt/gitlab/embedded/service/gitlab-rails/VERSION<br></code></pre></td></tr></table></figure><p><strong>1. Docker volume  方式</strong></p><p>注意：该方法移动文件时，一定要保持原文件权限！！！</p><p>复制 volume</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">cp</span> -rfp /program/gitlab /program/gitlab.bak<br></code></pre></td></tr></table></figure><p>压缩&#x2F;打包 volume</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">tar -czvp -f /program/gitlab.tar.gz /program/gitlab.bak<br></code></pre></td></tr></table></figure><p>解压&#x2F;解包 volume</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">tar -xzvp -f /program/gitlab.tar.gz<br></code></pre></td></tr></table></figure><p><strong>2. GitLab备份方式</strong></p><p>备份数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker <span class="hljs-built_in">exec</span> gitlab gitlab-rake gitlab:backup:create<br></code></pre></td></tr></table></figure><p>拷贝到物理机</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker <span class="hljs-built_in">cp</span> gitlab:/xxx /program/<br></code></pre></td></tr></table></figure><p>还原</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker <span class="hljs-built_in">exec</span> -it &lt;name of container&gt; gitlab-rake gitlab:backup:restore<br></code></pre></td></tr></table></figure><h2 id="修复克隆地址"><a href="#修复克隆地址" class="headerlink" title="修复克隆地址"></a>修复克隆地址</h2><p>修改配置文件</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">vim</span> gitlab.rb<br></code></pre></td></tr></table></figure><p>修改正确的IP&#x2F;地址</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">external_url</span> <span class="hljs-string">&#x27;http://git.taigu.org&#x27;</span><br></code></pre></td></tr></table></figure><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><ol><li><p>权限问题</p><p>执行修复指令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo docker <span class="hljs-built_in">exec</span> -it gitlab update-permissions<br></code></pre></td></tr></table></figure></li><li><p><code>gitaly.pid</code>错误</p><p>删除 <code>gitlab/data/gitaly/gitaly.pid</code></p></li></ol><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://docs.gitlab.com/omnibus/docker/">docker install gitlab</a></p><p><a href="https://docs.gitlab.com/ce/raketasks/backup_restore.html#restore-for-omnibus-installations">docker gitlab backup</a></p>]]></content>
    
    
    <categories>
      
      <category>Git</category>
      
    </categories>
    
    
    <tags>
      
      <tag>GitLab</tag>
      
      <tag>Git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Docker 安装教程</title>
    <link href="/2019/01/30/docker/docker%20%E5%AE%89%E8%A3%85/"/>
    <url>/2019/01/30/docker/docker%20%E5%AE%89%E8%A3%85/</url>
    
    <content type="html"><![CDATA[<p><a href="www.docker.com">Docker</a> 是常用的软件容器平台，可快速创建、部署服务，提高生产效率。</p><span id="more"></span><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>操作系统：Centos7</p><p>SeLinux：开启</p><h2 id="存储库安装"><a href="#存储库安装" class="headerlink" title="存储库安装"></a>存储库安装</h2><p><strong>卸载旧</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo yum remove \<br>  docker \<br>  docker-client \<br>  docker-client-latest \<br>  docker-common \<br>  docker-latest \<br>  docker-latest-logrotate \<br>  docker-logrotate \<br>  docker-engine<br></code></pre></td></tr></table></figure><p><strong>安装需要的包</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo yum install -y \<br>  yum-utils \<br>  device-mapper-persistent-data \<br>  lvm2<br></code></pre></td></tr></table></figure><p><strong>设置稳定存储库</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo yum-config-manager \<br>  --add-repo \<br>  https://download.docker.com/linux/centos/docker-ce.repo<br></code></pre></td></tr></table></figure><p><strong>安装新 Docker</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo yum install docker-ce docker-ce-cli containerd.io<br></code></pre></td></tr></table></figure><p><strong>国内加速</strong></p><p>阿里云搜索 <code>容器镜像加速</code>，进入，找到 <code>镜像加速器</code>，选择相应的操作系统，执行相关指令</p><p>例如：Centos7</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo <span class="hljs-built_in">mkdir</span> -p /etc/docker<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim <span class="hljs-built_in">tee</span> /etc/docker/daemon.json<br></code></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;registry-mirrors&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;https://xxxxxx.mirror.aliyuncs.com&quot;</span><span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>如果已经启动 docker，需要重启服务生效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo systemctl daemon-reload<br>sudo systemctl restart docker<br></code></pre></td></tr></table></figure><p><strong>选择大容量分区</strong></p><p>查看分区空间使用情况</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">df</span> -h<br></code></pre></td></tr></table></figure><p>设置 docker 根目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /etc/docker/daemon.json<br></code></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;graph&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/home/docker&quot;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>如果已经启动 docker，需要重启服务生效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo systemctl daemon-reload<br>sudo systemctl restart docker<br></code></pre></td></tr></table></figure><p><strong>启动</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo systemctl start docker<br></code></pre></td></tr></table></figure><p><strong>自启</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo systemctl <span class="hljs-built_in">enable</span> docker<br></code></pre></td></tr></table></figure><p><strong>关闭自启</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo systemctl <span class="hljs-built_in">disable</span> docker<br></code></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://docs.docker.com/install/linux/docker-ce/centos/">docker</a></p>]]></content>
    
    
    <categories>
      
      <category>Docker</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Docker</tag>
      
      <tag>微服务</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo 快速开始</title>
    <link href="/2019/01/29/hexo-%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B/"/>
    <url>/2019/01/29/hexo-%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B/</url>
    
    <content type="html"><![CDATA[<p><a href="hexo.io">hexo</a> 是常用的静态网页构建工具，支持markdown，拥有丰富的插件。常用于构建个人博客。</p><span id="more"></span><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p><code>OS</code> window 10 1809</p><p><code>node</code> 10.13.0</p><p><code>npm</code> 6.6.0</p><p><code>PowerShell</code> 5.1.17763.134</p><p><code>hexo</code> 3.8.0</p><p><code>hexo-cli</code> 1.1.0</p><h2 id="开始构建"><a href="#开始构建" class="headerlink" title="开始构建"></a>开始构建</h2><p><code>shift+右键</code> 启动 <code>PowerShell</code>，创建 hexo 目录（构建器项目）</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino">mkdir hexo<br></code></pre></td></tr></table></figure><p>进入目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> hexo<br></code></pre></td></tr></table></figure><p>全局安装 <code>hexo-cli</code>，如果还没有安装<a href="nodejs.org">nodejs</a>和<a href="git-scm.com">git</a>，请参考<a href="hexo.io/zh-cn/docs">hexo文档</a>，此处不再重复记录</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm">npm install -g hexo-<span class="hljs-keyword">cli</span><br></code></pre></td></tr></table></figure><p>初始化 hexo</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp">hexo <span class="hljs-keyword">init</span><br></code></pre></td></tr></table></figure><p>安装依赖包</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">npm <span class="hljs-keyword">install</span><br></code></pre></td></tr></table></figure><p>生成静态资源</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs verilog">hexo <span class="hljs-keyword">generate</span> 或 hexo g<br></code></pre></td></tr></table></figure><p>本地启动sever测试</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs axapta">hexo <span class="hljs-keyword">server</span><br></code></pre></td></tr></table></figure><p>浏览器访问 <a href="localhost:4000">localhost:4000</a></p><p>可以看到一个简单的个人博客系统已经完成了！</p><p>参考 <a href="https://hexo.io/zh-cn/docs/">hexo docs</a></p><h2 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h2><p>这里以 <a href="https://github.com/theme-next/hexo-theme-next/blob/master/docs/zh-CN/README.md">Next v6.0.x </a>为例子</p><p>下载主题</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">cd</span> hexo<br>git clone https://github.<span class="hljs-keyword">com</span>/theme-<span class="hljs-keyword">next</span>/hexo-theme-<span class="hljs-keyword">next</span> themes/<span class="hljs-keyword">next</span><br></code></pre></td></tr></table></figure><p>修改主题，修改<code>./_config.yml</code>中的<code>theme</code>为<code>next</code></p><p>注意区分<code>./themes/next/_config.yml</code></p><p>为了方便区分，下面更换称呼</p><p><code>./_config.yml</code>称为系统配置</p><p><code>./themes/next/_config.yml</code>称为主题配置</p><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs vbnet"><span class="hljs-symbol">theme:</span> <span class="hljs-keyword">next</span><br><br></code></pre></td></tr></table></figure><p>保存</p><p>清理缓存</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo clean</span><br><br></code></pre></td></tr></table></figure><p>重新构建</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo g</span><br><br></code></pre></td></tr></table></figure><p>本地启动</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs axapta">hexo <span class="hljs-keyword">server</span><br><br></code></pre></td></tr></table></figure><p>浏览器访问 <a href="localhost:4000">localhost:4000</a></p><p>成功更换主题！</p><h2 id="Hexo-优化"><a href="#Hexo-优化" class="headerlink" title="Hexo 优化"></a>Hexo 优化</h2><ol><li><p>基本设置<a href="hexo.io/zh-cn/docs/configuration.html">参考</a></p><p>title: xxx’s blog<br>author: xxx<br>language: zh-CN<br>timezone: Asia&#x2F;Shanghai</p></li></ol><h2 id="主题优化"><a href="#主题优化" class="headerlink" title="主题优化"></a>主题优化</h2><ol><li><p>添加评论系统</p><p>此处使用 <a href="valine.js.org">valine</a></p><p>参考 <a href="valine.js.org/quickstart.html">快速申请</a> 申请 <code>leancloud</code> 账号，并获取 <code>APP ID</code> 和 <code>APP Key</code></p><p>打开主题配置<code>./themes/next/_config.yml</code></p><p>定位到 <code>valine</code></p><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs vbnet"><span class="hljs-symbol">enable:</span> <span class="hljs-literal">true</span><br><span class="hljs-symbol">appid:</span> &lt;APP ID&gt;<br><span class="hljs-symbol">appkey:</span> &lt;APP <span class="hljs-keyword">Key</span>&gt;<br><br></code></pre></td></tr></table></figure></li><li><p>设置侧边栏</p><p>在主题配置中，找到<code>sidebar</code></p><p>例如修改显示方式 <code>display</code></p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs maxima">#<span class="hljs-built_in">display</span>: post  默认<br>#<span class="hljs-built_in">display</span>: always  总是显示<br><span class="hljs-built_in">display</span>: hide  开始隐藏<br>#<span class="hljs-built_in">display</span>: <span class="hljs-built_in">remove</span>  不显示<br><br></code></pre></td></tr></table></figure></li><li><p>导航菜单</p><p>在主题配置中，找到<code>menu</code></p><p>注释<code>tags</code>等，读者可以自由选择</p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs subunit"><span class="hljs-keyword">tags:</span> /tags/ || tags<br><br></code></pre></td></tr></table></figure><p>在根目录执行指令</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs haxe">hexo <span class="hljs-keyword">new</span> <span class="hljs-type">page</span> <span class="hljs-string">&quot;tags&quot;</span><br><br></code></pre></td></tr></table></figure><p>增加内容，关闭评论和指定页面类型</p><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs vbnet"><span class="hljs-symbol">comments:</span> <span class="hljs-literal">false</span><br><span class="hljs-symbol">type:</span> <span class="hljs-string">&quot;tags&quot;</span><br><br></code></pre></td></tr></table></figure><p>执行后，会创建文件夹<code>./source/tags/</code>，并在里面初始化<code>tags</code>页面的md文件<code>index.md</code></p><p>重新构建后，可以看到页面多了一个导航栏<code>tags</code></p> <figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs axapta">hexo clean<br>hexo g<br>hexo <span class="hljs-keyword">server</span><br></code></pre></td></tr></table></figure></li><li><p>文章阅读数leancloud_visitors</p><p>在主题配置中，找到<code>leancloud_visitors</code></p><p>填写 AppID 和 AppKey</p><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs vbnet"><span class="hljs-symbol">appid:</span> &lt;APP ID&gt;<br><span class="hljs-symbol">appkey:</span> &lt;APP <span class="hljs-keyword">Key</span>&gt;<br><br></code></pre></td></tr></table></figure></li><li><p>社交</p><p>在主题配置中，找到<code>social</code></p><p>启用 <code>social</code></p><p>添加相应的社交工具以及账号</p></li><li><p>Next主题开启字数统计及阅读时长</p><p>安装 hexo-symbols-count-time</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs applescript">npm i hexo-symbols-<span class="hljs-built_in">count</span>-<span class="hljs-built_in">time</span> -D<br><br></code></pre></td></tr></table></figure><p>hexo 配置文件增加</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">symbols_count_time:</span><br>  <span class="hljs-attr">symbols:</span> <span class="hljs-literal">true</span> <span class="hljs-comment"># 文章字数</span><br>  <span class="hljs-attr">time:</span> <span class="hljs-literal">true</span> <span class="hljs-comment"># 阅读时长</span><br>  <span class="hljs-attr">total_symbols:</span> <span class="hljs-literal">true</span> <span class="hljs-comment"># 所有文章总字数</span><br>  <span class="hljs-attr">total_time:</span> <span class="hljs-literal">true</span> <span class="hljs-comment"># 所有文章阅读中时长</span><br><br></code></pre></td></tr></table></figure><p>Next 主题配置文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">symbols_count_time:</span><br>  <span class="hljs-attr">separated_meta:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">item_text_post:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">item_text_total:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">awl:</span> <span class="hljs-number">4</span><br>  <span class="hljs-attr">wpm:</span> <span class="hljs-number">275</span><br><br></code></pre></td></tr></table></figure></li><li><p>永久连接</p><p>安装uuid</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">npm install hexo-<span class="hljs-built_in">uuid</span> <span class="hljs-comment">--save</span><br><br></code></pre></td></tr></table></figure><p>修改hexo配置文件</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs elixir"><span class="hljs-symbol">permalink:</span> <span class="hljs-symbol">:year</span><span class="hljs-symbol">:month</span><span class="hljs-symbol">:day</span><span class="hljs-symbol">:uuid/</span><br><br></code></pre></td></tr></table></figure></li></ol><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="zhuanlan.zhihu.com/p/33616481">hexo+github博客搭建之路</a></p><p><a href="hexo.io">hexo.io</a></p>]]></content>
    
    
    <categories>
      
      <category>tool</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
      <tag>blog</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Making a round picture with PowerPoint 2016</title>
    <link href="/2018/07/26/Making-a-round-picture-with-PowerPoint-2016/"/>
    <url>/2018/07/26/Making-a-round-picture-with-PowerPoint-2016/</url>
    
    <content type="html"><![CDATA[<p>Sometime we need to make a round image, but there are no tools like <a href="https://www.photoshop.com/">Photoshop</a> and <a href="https://www.gimp.org/">GIMP</a> on our computer. However, we don’t want to install these tools. Is there an easy way? Yes, we can do it with <a href="https://products.office.com/en-us/powerpoint">PowerPoint 2016</a>. </p><span id="more"></span><h3 id="Open-your-PowerPoint-2016-and-insert-an-image"><a href="#Open-your-PowerPoint-2016-and-insert-an-image" class="headerlink" title="Open your PowerPoint 2016 and insert an image"></a>Open your PowerPoint 2016 and insert an image</h3><p>Making-a-round-picture-with-PowerPoint-2016<img src="/./d77224a0222f11e9b4a33dbd7fc368d0/0001.png" alt="image"></p><h3 id="Insert-a-circle"><a href="#Insert-a-circle" class="headerlink" title="Insert a circle"></a>Insert a circle</h3><p><img src="/./d77224a0222f11e9b4a33dbd7fc368d0/0002.png" alt="image"></p><h3 id="Adjust-style"><a href="#Adjust-style" class="headerlink" title="Adjust style"></a>Adjust style</h3><p><img src="/./d77224a0222f11e9b4a33dbd7fc368d0/0003.png" alt="image"></p><h3 id="Adjust-the-position-of-the-circle-the-result-is-as-follows"><a href="#Adjust-the-position-of-the-circle-the-result-is-as-follows" class="headerlink" title="Adjust the position of the circle, the result is as follows:"></a>Adjust the position of the circle, the result is as follows:</h3><p><img src="/./d77224a0222f11e9b4a33dbd7fc368d0/0004.png" alt="image"></p><h3 id="Next-merge-the-circle-and-the-image-select-the-circle-and-image-note-be-sure-to-select-the-image-first"><a href="#Next-merge-the-circle-and-the-image-select-the-circle-and-image-note-be-sure-to-select-the-image-first" class="headerlink" title="Next merge the circle and the image, select the circle and image (note: be sure to select the image first)"></a>Next merge the circle and the image, select the circle and image (note: be sure to select the image first)</h3><p><img src="/./d77224a0222f11e9b4a33dbd7fc368d0/0005.png" alt="image"></p><h3 id="Then-merge"><a href="#Then-merge" class="headerlink" title="Then merge"></a>Then merge</h3><p><img src="/./d77224a0222f11e9b4a33dbd7fc368d0/0006.png" alt="image"></p><h3 id="Ok-now-we-have-the-picture-we-want-We-can-save-it-to-use-it"><a href="#Ok-now-we-have-the-picture-we-want-We-can-save-it-to-use-it" class="headerlink" title="Ok, now we have the picture we want. We can save it to use it"></a>Ok, now we have the picture we want. We can save it to use it</h3><p><img src="/./d77224a0222f11e9b4a33dbd7fc368d0/0007.png" alt="image"><br><img src="/./d77224a0222f11e9b4a33dbd7fc368d0/0008.png" alt="image"><br>In this way, we use <a href="https://products.office.com/en-us/powerpoint">PowerPoint 2016</a> to make a round image.</p>]]></content>
    
    
    <categories>
      
      <category>tool</category>
      
    </categories>
    
    
    <tags>
      
      <tag>PowerPoint2016</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
